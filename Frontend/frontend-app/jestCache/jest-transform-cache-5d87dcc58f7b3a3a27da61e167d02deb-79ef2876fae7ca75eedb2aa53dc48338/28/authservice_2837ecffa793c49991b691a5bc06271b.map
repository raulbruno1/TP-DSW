{"version":3,"names":["cov_16iiphgn35","actualCoverage","s","core_1","require","rxjs_1","token_storage_service_1","AuthService","exports","isLoggedIn","f","loggedIn","asObservable","constructor","tokenStorageService","BehaviorSubject","checkToken","login","token","saveToken","next","logout","removeToken","localStorage","removeItem","getToken","b","tslib_1","__decorate","Injectable","providedIn","TokenStorageService"],"sources":["C:\\Users\\Juli√°n\\Desktop\\front\\frontend-app\\src\\app\\services\\auth.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { BehaviorSubject } from 'rxjs';\r\nimport { TokenStorageService } from './token-storage.service';\r\nimport { UserdataService } from './userdata.service';\r\n\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AuthService {\r\n  private loggedIn = new BehaviorSubject<boolean>(false);\r\n  private alumnoData : any\r\n\r\n  get isLoggedIn() {\r\n    return this.loggedIn.asObservable();\r\n  }\r\n\r\n  constructor(private tokenStorageService: TokenStorageService) {\r\n    this.checkToken();\r\n  }\r\n\r\n  login(token: string) {\r\n    this.tokenStorageService.saveToken(token);\r\n    this.loggedIn.next(true);\r\n  }\r\n\r\n  logout() {\r\n    this.tokenStorageService.removeToken();\r\n    localStorage.removeItem('isAdmin');\r\n    localStorage.removeItem('studentData');\r\n    this.loggedIn.next(false);\r\n  }\r\n\r\n  private checkToken() {\r\n    const token = this.tokenStorageService.getToken();\r\n    if (token) {\r\n      this.loggedIn.next(true);\r\n    }\r\n  }\r\n}"],"mappings":"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"}