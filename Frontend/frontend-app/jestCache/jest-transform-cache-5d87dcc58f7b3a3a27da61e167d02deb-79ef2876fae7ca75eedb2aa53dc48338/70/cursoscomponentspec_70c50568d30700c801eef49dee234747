df9aedddf0b1f7e251a7d7beb9b1b76d
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const testing_1 = require("@angular/core/testing");
const cursos_component_1 = require("./cursos.component");
const materiadata_service_mock_1 = require("src/app/mocks/materiadata.service.mock");
const materiadata_service_1 = require("src/app/services/materiadata.service");
const dialog_service_mock_1 = require("src/app/mocks/dialog.service.mock");
const dialog_service_1 = require("src/app/services/dialog.service");
const http_1 = require("@angular/common/http");
const httpMock = { get: jest.fn() };
const dialogMock = { open: jest.fn() };
describe('CursosComponent', () => {
    let component;
    let fixture;
    beforeEach(() => {
        testing_1.TestBed.configureTestingModule({
            declarations: [cursos_component_1.CursosComponent],
            providers: [{ provide: materiadata_service_1.CoursedataService, useClass: materiadata_service_mock_1.CoursedataServiceMock },
                { provide: dialog_service_1.DialogService, useClass: dialog_service_mock_1.DialogServiceMock },
                { provide: http_1.HttpClient, useValue: httpMock },
                { provide: dialog_service_1.DialogService, useValue: dialogMock }]
        }).compileComponents();
        fixture = testing_1.TestBed.createComponent(cursos_component_1.CursosComponent);
        component = fixture.componentInstance;
        fixture.detectChanges();
    });
    it('should create', () => {
        expect(component).toBeTruthy();
    });
    it('should have "all" as the default selected category', () => {
        expect(component.selected_category).toEqual('all');
    });
    it('should filter courses by category', () => {
        const category = 'principiante';
        component.original_courses = [
            { id: '312313333', name: 'test', totalhours: 45, email: 'email@prueba', desc: 'hola', icon: '/assets/cursos/motherboard.svg', level: 'principiante' },
            { id: '312313334', name: 'test2', totalhours: 45, email: 'email2@prueba', desc: 'hola', icon: '/assets/cursos/motherboard.svg', level: 'avanzado' },
            { id: '312313335', name: 'test3', totalhours: 45, email: 'email3@prueba', desc: 'hola', icon: '/assets/cursos/motherboard.svg', level: 'principiante' }
        ];
        component.filterByCategory(category);
        expect(component.courses).toEqual(component.original_courses.filter((course) => course.category === category));
    });
    it('should show all courses when ShowAll is called', () => {
        component.ShowAll();
        expect(component.courses).toEqual(component.original_courses);
    });
    it('should reset selected category and courses when restart is called', () => {
        component.restart();
        expect(component.selected_category).toEqual('all');
        expect(component.courses).toEqual(component.original_courses);
    });
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJmaWxlIjoiQzpcXFVzZXJzXFxKdWxpw6FuXFxEZXNrdG9wXFxmcm9udFxcZnJvbnRlbmQtYXBwXFxzcmNcXGFwcFxcY29tcG9uZW50c1xcY3Vyc29zXFxjdXJzb3MuY29tcG9uZW50LnNwZWMudHMiLCJtYXBwaW5ncyI6Ijs7QUFBQSxtREFBa0U7QUFDbEUseURBQXFEO0FBQ3JELHFGQUErRTtBQUMvRSw4RUFBeUU7QUFDekUsMkVBQXNFO0FBQ3RFLG9FQUFnRTtBQUNoRSwrQ0FBa0Q7QUFFbEQsTUFBTSxRQUFRLEdBQUcsRUFBQyxHQUFHLEVBQUUsSUFBSSxDQUFDLEVBQUUsRUFBRSxFQUFDLENBQUM7QUFDbEMsTUFBTSxVQUFVLEdBQUUsRUFBQyxJQUFJLEVBQUUsSUFBSSxDQUFDLEVBQUUsRUFBRSxFQUFDLENBQUM7QUFFcEMsUUFBUSxDQUFDLGlCQUFpQixFQUFFLEdBQUcsRUFBRTtJQUMvQixJQUFJLFNBQTBCLENBQUM7SUFDL0IsSUFBSSxPQUEwQyxDQUFDO0lBRS9DLFVBQVUsQ0FBQyxHQUFHLEVBQUU7UUFDZCxpQkFBTyxDQUFDLHNCQUFzQixDQUFDO1lBQzdCLFlBQVksRUFBRSxDQUFDLGtDQUFlLENBQUM7WUFDL0IsU0FBUyxFQUFFLENBQUMsRUFBQyxPQUFPLEVBQUUsdUNBQWlCLEVBQUUsUUFBUSxFQUFFLGdEQUFxQixFQUFDO2dCQUM3RCxFQUFDLE9BQU8sRUFBRSw4QkFBYSxFQUFFLFFBQVEsRUFBRSx1Q0FBaUIsRUFBQztnQkFDdkQsRUFBQyxPQUFPLEVBQUUsaUJBQVUsRUFBRSxRQUFRLEVBQUUsUUFBUSxFQUFDO2dCQUN6QyxFQUFDLE9BQU8sRUFBRSw4QkFBYSxFQUFFLFFBQVEsRUFBRSxVQUFVLEVBQUMsQ0FBQztTQUMxRCxDQUFDLENBQUMsaUJBQWlCLEVBQUUsQ0FBQztRQUN2QixPQUFPLEdBQUcsaUJBQU8sQ0FBQyxlQUFlLENBQUMsa0NBQWUsQ0FBQyxDQUFDO1FBQ25ELFNBQVMsR0FBRyxPQUFPLENBQUMsaUJBQWlCLENBQUM7UUFDdEMsT0FBTyxDQUFDLGFBQWEsRUFBRSxDQUFDO0lBQzFCLENBQUMsQ0FBQyxDQUFDO0lBRUgsRUFBRSxDQUFDLGVBQWUsRUFBRSxHQUFHLEVBQUU7UUFDdkIsTUFBTSxDQUFDLFNBQVMsQ0FBQyxDQUFDLFVBQVUsRUFBRSxDQUFDO0lBQ2pDLENBQUMsQ0FBQyxDQUFDO0lBRUgsRUFBRSxDQUFDLG9EQUFvRCxFQUFFLEdBQUcsRUFBRTtRQUM1RCxNQUFNLENBQUMsU0FBUyxDQUFDLGlCQUFpQixDQUFDLENBQUMsT0FBTyxDQUFDLEtBQUssQ0FBQyxDQUFDO0lBQ3JELENBQUMsQ0FBQyxDQUFDO0lBRUgsRUFBRSxDQUFDLG1DQUFtQyxFQUFFLEdBQUcsRUFBRTtRQUMzQyxNQUFNLFFBQVEsR0FBRyxjQUFjLENBQUM7UUFBQSxTQUFTLENBQUMsZ0JBQWdCLEdBQUc7WUFDM0QsRUFBRSxFQUFFLEVBQUUsV0FBVyxFQUFDLElBQUksRUFBRSxNQUFNLEVBQUMsVUFBVSxFQUFDLEVBQUUsRUFBRSxLQUFLLEVBQUUsY0FBYyxFQUFFLElBQUksRUFBRSxNQUFNLEVBQUUsSUFBSSxFQUFFLGdDQUFnQyxFQUFHLEtBQUssRUFBRSxjQUFjLEVBQUU7WUFDbkosRUFBRSxFQUFFLEVBQUUsV0FBVyxFQUFDLElBQUksRUFBRSxPQUFPLEVBQUMsVUFBVSxFQUFDLEVBQUUsRUFBRSxLQUFLLEVBQUUsZUFBZSxFQUFFLElBQUksRUFBRSxNQUFNLEVBQUUsSUFBSSxFQUFFLGdDQUFnQyxFQUFHLEtBQUssRUFBRSxVQUFVLEVBQUU7WUFDakosRUFBRSxFQUFFLEVBQUUsV0FBVyxFQUFDLElBQUksRUFBRSxPQUFPLEVBQUMsVUFBVSxFQUFDLEVBQUUsRUFBRSxLQUFLLEVBQUUsZUFBZSxFQUFFLElBQUksRUFBRSxNQUFNLEVBQUUsSUFBSSxFQUFFLGdDQUFnQyxFQUFHLEtBQUssRUFBRSxjQUFjLEVBQUU7U0FDdEosQ0FBQztRQUNGLFNBQVMsQ0FBQyxnQkFBZ0IsQ0FBQyxRQUFRLENBQUMsQ0FBQztRQUNyQyxNQUFNLENBQUMsU0FBUyxDQUFDLE9BQU8sQ0FBQyxDQUFDLE9BQU8sQ0FBQyxTQUFTLENBQUMsZ0JBQWdCLENBQUMsTUFBTSxDQUFDLENBQUMsTUFBNkIsRUFBRSxFQUFFLENBQUMsTUFBTSxDQUFDLFFBQVEsS0FBSyxRQUFRLENBQUMsQ0FBQyxDQUFDO0lBQ3hJLENBQUMsQ0FBQyxDQUFDO0lBRUgsRUFBRSxDQUFDLGdEQUFnRCxFQUFFLEdBQUcsRUFBRTtRQUN4RCxTQUFTLENBQUMsT0FBTyxFQUFFLENBQUM7UUFDcEIsTUFBTSxDQUFDLFNBQVMsQ0FBQyxPQUFPLENBQUMsQ0FBQyxPQUFPLENBQUMsU0FBUyxDQUFDLGdCQUFnQixDQUFDLENBQUM7SUFDaEUsQ0FBQyxDQUFDLENBQUM7SUFFSCxFQUFFLENBQUMsbUVBQW1FLEVBQUUsR0FBRyxFQUFFO1FBQzNFLFNBQVMsQ0FBQyxPQUFPLEVBQUUsQ0FBQztRQUNwQixNQUFNLENBQUMsU0FBUyxDQUFDLGlCQUFpQixDQUFDLENBQUMsT0FBTyxDQUFDLEtBQUssQ0FBQyxDQUFDO1FBQ25ELE1BQU0sQ0FBQyxTQUFTLENBQUMsT0FBTyxDQUFDLENBQUMsT0FBTyxDQUFDLFNBQVMsQ0FBQyxnQkFBZ0IsQ0FBQyxDQUFDO0lBQ2hFLENBQUMsQ0FBQyxDQUFDO0FBQ0wsQ0FBQyxDQUFDLENBQUMiLCJuYW1lcyI6W10sInNvdXJjZXMiOlsiQzpcXFVzZXJzXFxKdWxpw6FuXFxEZXNrdG9wXFxmcm9udFxcZnJvbnRlbmQtYXBwXFxzcmNcXGFwcFxcY29tcG9uZW50c1xcY3Vyc29zXFxjdXJzb3MuY29tcG9uZW50LnNwZWMudHMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQ29tcG9uZW50Rml4dHVyZSwgVGVzdEJlZCB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUvdGVzdGluZyc7XHJcbmltcG9ydCB7IEN1cnNvc0NvbXBvbmVudCB9IGZyb20gJy4vY3Vyc29zLmNvbXBvbmVudCc7XHJcbmltcG9ydCB7IENvdXJzZWRhdGFTZXJ2aWNlTW9jayB9IGZyb20gJ3NyYy9hcHAvbW9ja3MvbWF0ZXJpYWRhdGEuc2VydmljZS5tb2NrJztcclxuaW1wb3J0IHsgQ291cnNlZGF0YVNlcnZpY2UgfSBmcm9tICdzcmMvYXBwL3NlcnZpY2VzL21hdGVyaWFkYXRhLnNlcnZpY2UnO1xyXG5pbXBvcnQgeyBEaWFsb2dTZXJ2aWNlTW9jayB9IGZyb20gJ3NyYy9hcHAvbW9ja3MvZGlhbG9nLnNlcnZpY2UubW9jayc7XHJcbmltcG9ydCB7IERpYWxvZ1NlcnZpY2UgfSBmcm9tICdzcmMvYXBwL3NlcnZpY2VzL2RpYWxvZy5zZXJ2aWNlJztcclxuaW1wb3J0IHsgSHR0cENsaWVudCB9IGZyb20gJ0Bhbmd1bGFyL2NvbW1vbi9odHRwJztcclxuXHJcbmNvbnN0IGh0dHBNb2NrID0ge2dldDogamVzdC5mbigpfTtcclxuY29uc3QgZGlhbG9nTW9jaz0ge29wZW46IGplc3QuZm4oKX07XHJcblxyXG5kZXNjcmliZSgnQ3Vyc29zQ29tcG9uZW50JywgKCkgPT4ge1xyXG4gIGxldCBjb21wb25lbnQ6IEN1cnNvc0NvbXBvbmVudDtcclxuICBsZXQgZml4dHVyZTogQ29tcG9uZW50Rml4dHVyZTxDdXJzb3NDb21wb25lbnQ+O1xyXG5cclxuICBiZWZvcmVFYWNoKCgpID0+IHtcclxuICAgIFRlc3RCZWQuY29uZmlndXJlVGVzdGluZ01vZHVsZSh7XHJcbiAgICAgIGRlY2xhcmF0aW9uczogW0N1cnNvc0NvbXBvbmVudF0sXHJcbiAgICAgIHByb3ZpZGVyczogW3twcm92aWRlOiBDb3Vyc2VkYXRhU2VydmljZSwgdXNlQ2xhc3M6IENvdXJzZWRhdGFTZXJ2aWNlTW9ja30sXHJcbiAgICAgICAgICAgICAgICAgIHtwcm92aWRlOiBEaWFsb2dTZXJ2aWNlLCB1c2VDbGFzczogRGlhbG9nU2VydmljZU1vY2t9LFxyXG4gICAgICAgICAgICAgICAge3Byb3ZpZGU6IEh0dHBDbGllbnQsIHVzZVZhbHVlOiBodHRwTW9ja30sXHJcbiAgICAgICAgICAgICAgICB7cHJvdmlkZTogRGlhbG9nU2VydmljZSwgdXNlVmFsdWU6IGRpYWxvZ01vY2t9XVxyXG4gICAgfSkuY29tcGlsZUNvbXBvbmVudHMoKTtcclxuICAgIGZpeHR1cmUgPSBUZXN0QmVkLmNyZWF0ZUNvbXBvbmVudChDdXJzb3NDb21wb25lbnQpO1xyXG4gICAgY29tcG9uZW50ID0gZml4dHVyZS5jb21wb25lbnRJbnN0YW5jZTtcclxuICAgIGZpeHR1cmUuZGV0ZWN0Q2hhbmdlcygpO1xyXG4gIH0pO1xyXG5cclxuICBpdCgnc2hvdWxkIGNyZWF0ZScsICgpID0+IHtcclxuICAgIGV4cGVjdChjb21wb25lbnQpLnRvQmVUcnV0aHkoKTtcclxuICB9KTtcclxuXHJcbiAgaXQoJ3Nob3VsZCBoYXZlIFwiYWxsXCIgYXMgdGhlIGRlZmF1bHQgc2VsZWN0ZWQgY2F0ZWdvcnknLCAoKSA9PiB7XHJcbiAgICBleHBlY3QoY29tcG9uZW50LnNlbGVjdGVkX2NhdGVnb3J5KS50b0VxdWFsKCdhbGwnKTtcclxuICB9KTtcclxuXHJcbiAgaXQoJ3Nob3VsZCBmaWx0ZXIgY291cnNlcyBieSBjYXRlZ29yeScsICgpID0+IHtcclxuICAgIGNvbnN0IGNhdGVnb3J5ID0gJ3ByaW5jaXBpYW50ZSc7Y29tcG9uZW50Lm9yaWdpbmFsX2NvdXJzZXMgPSBbXHJcbiAgICAgIHsgaWQ6ICczMTIzMTMzMzMnLG5hbWU6ICd0ZXN0Jyx0b3RhbGhvdXJzOjQ1LCBlbWFpbDogJ2VtYWlsQHBydWViYScsIGRlc2M6ICdob2xhJywgaWNvbjogJy9hc3NldHMvY3Vyc29zL21vdGhlcmJvYXJkLnN2ZycgLCBsZXZlbDogJ3ByaW5jaXBpYW50ZScgfSxcclxuICAgICAgeyBpZDogJzMxMjMxMzMzNCcsbmFtZTogJ3Rlc3QyJyx0b3RhbGhvdXJzOjQ1LCBlbWFpbDogJ2VtYWlsMkBwcnVlYmEnLCBkZXNjOiAnaG9sYScsIGljb246ICcvYXNzZXRzL2N1cnNvcy9tb3RoZXJib2FyZC5zdmcnICwgbGV2ZWw6ICdhdmFuemFkbycgfSxcclxuICAgICAgeyBpZDogJzMxMjMxMzMzNScsbmFtZTogJ3Rlc3QzJyx0b3RhbGhvdXJzOjQ1LCBlbWFpbDogJ2VtYWlsM0BwcnVlYmEnLCBkZXNjOiAnaG9sYScsIGljb246ICcvYXNzZXRzL2N1cnNvcy9tb3RoZXJib2FyZC5zdmcnICwgbGV2ZWw6ICdwcmluY2lwaWFudGUnIH1cclxuICAgIF07XHJcbiAgICBjb21wb25lbnQuZmlsdGVyQnlDYXRlZ29yeShjYXRlZ29yeSk7XHJcbiAgICBleHBlY3QoY29tcG9uZW50LmNvdXJzZXMpLnRvRXF1YWwoY29tcG9uZW50Lm9yaWdpbmFsX2NvdXJzZXMuZmlsdGVyKChjb3Vyc2U6IHsgY2F0ZWdvcnk6IHN0cmluZzsgfSkgPT4gY291cnNlLmNhdGVnb3J5ID09PSBjYXRlZ29yeSkpO1xyXG4gIH0pO1xyXG5cclxuICBpdCgnc2hvdWxkIHNob3cgYWxsIGNvdXJzZXMgd2hlbiBTaG93QWxsIGlzIGNhbGxlZCcsICgpID0+IHtcclxuICAgIGNvbXBvbmVudC5TaG93QWxsKCk7XHJcbiAgICBleHBlY3QoY29tcG9uZW50LmNvdXJzZXMpLnRvRXF1YWwoY29tcG9uZW50Lm9yaWdpbmFsX2NvdXJzZXMpO1xyXG4gIH0pO1xyXG5cclxuICBpdCgnc2hvdWxkIHJlc2V0IHNlbGVjdGVkIGNhdGVnb3J5IGFuZCBjb3Vyc2VzIHdoZW4gcmVzdGFydCBpcyBjYWxsZWQnLCAoKSA9PiB7XHJcbiAgICBjb21wb25lbnQucmVzdGFydCgpO1xyXG4gICAgZXhwZWN0KGNvbXBvbmVudC5zZWxlY3RlZF9jYXRlZ29yeSkudG9FcXVhbCgnYWxsJyk7XHJcbiAgICBleHBlY3QoY29tcG9uZW50LmNvdXJzZXMpLnRvRXF1YWwoY29tcG9uZW50Lm9yaWdpbmFsX2NvdXJzZXMpO1xyXG4gIH0pO1xyXG59KTsiXSwidmVyc2lvbiI6M30=