{"version":3,"names":["cov_1vog2nx7g","actualCoverage","s","core_1","require","router_1","materiadata_service_1","auth_service_1","alumnosdata_service_1","inscripciondata_service_1","router_2","angular_notifier_1","dialog_service_1","CursoDetalleComponent","exports","constructor","authService","route","courseService","studentDataService","inscriptiondataService","router","notifier","dialogService","f","isLoggedIn","ngOnInit","params","subscribe","course_id","storedStudentData","localStorage","getItem","student_data","b","JSON","parse","fetchCourseDetails","getCourseById","next","course","data","error","dialogRef1","openFailureDialog","afterClosed","navigate","inscribe","loggedIn","student_Id","id","inscription_date","Date","toISOString","getInscriptionByStudentId","inscriptions","inscription","addInscription","response","dialogRef","openSuccessDialog","tslib_1","__decorate","Component","selector","template","AuthService","ActivatedRoute","CoursedataService","StudentdataService","InscriptionDataService","Router","NotifierService","DialogService"],"sources":["C:\\Users\\Julián\\Desktop\\front\\frontend-app\\src\\app\\components\\curso-detalle\\curso-detalle.component.ts"],"sourcesContent":["import { Component,OnInit } from '@angular/core';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { CoursedataService, CourseData } from '../../services/materiadata.service';\r\nimport { AuthService } from 'src/app/services/auth.service';\r\nimport { StudentdataService } from 'src/app/services/alumnosdata.service';\r\nimport { InscriptionDataService } from 'src/app/services/inscripciondata.service';\r\nimport { Router } from '@angular/router';\r\nimport { NotifierService } from 'angular-notifier';\r\nimport { DialogService } from 'src/app/services/dialog.service';\r\nimport { SuccessDialogComponent } from '../success-dialog/success-dialog.component.js';\r\nimport { MatDialogRef } from '@angular/material/dialog';\r\nimport { ErrorAvisoComponent } from '../error-aviso/error-aviso.component';\r\n\r\n\r\n\r\n@Component({\r\n  selector: 'app-curso-detalle',\r\n  templateUrl: './curso-detalle.component.html',\r\n  styleUrls: ['./curso-detalle.component.css']\r\n})\r\nexport class CursoDetalleComponent implements OnInit {\r\n  isLoggedIn: boolean = false;\r\n  course_id!: string;\r\n  student_Id!: string;\r\n  course!: CourseData;\r\n  student_data!: any;\r\n  private readonly notifier: NotifierService;\r\n  private dialogRef: MatDialogRef<SuccessDialogComponent> | undefined;\r\n  private dialogRef1: MatDialogRef<ErrorAvisoComponent> | undefined;\r\n\r\n\r\n  constructor(private authService: AuthService,\r\n    private route: ActivatedRoute,\r\n    private courseService: CoursedataService,\r\n    private studentDataService: StudentdataService,\r\n    private inscriptiondataService: InscriptionDataService,\r\n    private router: Router,\r\n    notifier: NotifierService,\r\n    private dialogService: DialogService) {\r\n    this.notifier = notifier;\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.route.params.subscribe(params => {\r\n      this.course_id = params['id'];\r\n      const storedStudentData = localStorage.getItem('studentData');\r\n      this.student_data = storedStudentData ? JSON.parse(storedStudentData) : null;\r\n      this.fetchCourseDetails();\r\n\r\n    });\r\n  }\r\n\r\n  fetchCourseDetails(): void {\r\n    this.courseService.getCourseById(this.course_id).subscribe({\r\n      next: course => {\r\n        this.course = course.data;\r\n      },\r\n      error: error => {\r\n        this.dialogRef1 = this.dialogService.openFailureDialog('Error al cargar los datos, intente nuevamente');\r\n        this.dialogRef1.afterClosed().subscribe(() => {\r\n          this.router.navigate(['/cursos']);\r\n        });\r\n      }\r\n    });\r\n  }\r\n  inscribe(): void {\r\n    this.authService.isLoggedIn.subscribe({\r\n      next: (loggedIn) => {\r\n        this.isLoggedIn = loggedIn;\r\n        if (!this.isLoggedIn) {\r\n          this.dialogRef1 = this.dialogService.openFailureDialog('Inicie sesión para continuar');\r\n          this.router.navigate(['/login']);\r\n          return;\r\n        }\r\n      }\r\n    });\r\n  \r\n    this.student_Id = this.student_data.data.id;\r\n    const inscription_date = new Date().toISOString();\r\n  \r\n    this.inscriptiondataService.getInscriptionByStudentId(this.student_Id).subscribe({\r\n      next: (inscriptions) => {\r\n        for (const inscription of inscriptions.data) {\r\n          if (this.course_id === inscription.course) {\r\n            this.dialogRef1 = this.dialogService.openFailureDialog('Ya se encuentra inscripto');\r\n            return;\r\n          }\r\n        }\r\n  \r\n        this.inscriptiondataService.addInscription(this.student_Id, this.course_id, inscription_date).subscribe({\r\n          next: response => {\r\n            this.dialogRef = this.dialogService.openSuccessDialog('Inscripción registrada');\r\n            this.dialogRef.afterClosed().subscribe(() => {\r\n              this.router.navigate(['/cursos']);\r\n            });\r\n          },\r\n          error: error => {\r\n            this.dialogRef1 = this.dialogService.openFailureDialog('Error al realizar la inscripción, intente nuevamente');\r\n          }\r\n        });\r\n      },\r\n      error: error => {\r\n        this.dialogRef1 = this.dialogService.openFailureDialog('Error al realizar la inscripción, intente nuevamente');\r\n      }\r\n    });\r\n  }}"],"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"}