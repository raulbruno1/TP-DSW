0dd23798d2471806e1489808b085f60b
"use strict";

/* istanbul ignore next */
function cov_2hdtg75bbe() {
  var path = "C:\\Users\\Juli\xE1n\\Desktop\\front\\frontend-app\\src\\app\\mocks\\materiadata.service.mock.ts";
  var hash = "c125bdc49719ca5f7b883c0415eefbb5fe04ebb4";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "C:\\Users\\Juli\xE1n\\Desktop\\front\\frontend-app\\src\\app\\mocks\\materiadata.service.mock.ts",
    statementMap: {
      "0": {
        start: {
          line: 2,
          column: 0
        },
        end: {
          line: 2,
          column: 62
        }
      },
      "1": {
        start: {
          line: 3,
          column: 0
        },
        end: {
          line: 3,
          column: 39
        }
      },
      "2": {
        start: {
          line: 4,
          column: 16
        },
        end: {
          line: 4,
          column: 32
        }
      },
      "3": {
        start: {
          line: 5,
          column: 15
        },
        end: {
          line: 5,
          column: 46
        }
      },
      "4": {
        start: {
          line: 6,
          column: 15
        },
        end: {
          line: 6,
          column: 39
        }
      },
      "5": {
        start: {
          line: 7,
          column: 15
        },
        end: {
          line: 7,
          column: 30
        }
      },
      "6": {
        start: {
          line: 8,
          column: 25
        },
        end: {
          line: 8,
          column: 67
        }
      },
      "7": {
        start: {
          line: 9,
          column: 28
        },
        end: {
          line: 55,
          column: 1
        }
      },
      "8": {
        start: {
          line: 11,
          column: 8
        },
        end: {
          line: 11,
          column: 25
        }
      },
      "9": {
        start: {
          line: 12,
          column: 8
        },
        end: {
          line: 12,
          column: 71
        }
      },
      "10": {
        start: {
          line: 15,
          column: 23
        },
        end: {
          line: 21,
          column: 41
        }
      },
      "11": {
        start: {
          line: 22,
          column: 8
        },
        end: {
          line: 22,
          column: 54
        }
      },
      "12": {
        start: {
          line: 25,
          column: 20
        },
        end: {
          line: 25,
          column: 42
        }
      },
      "13": {
        start: {
          line: 26,
          column: 8
        },
        end: {
          line: 28,
          column: 12
        }
      },
      "14": {
        start: {
          line: 27,
          column: 12
        },
        end: {
          line: 27,
          column: 66
        }
      },
      "15": {
        start: {
          line: 27,
          column: 48
        },
        end: {
          line: 27,
          column: 64
        }
      },
      "16": {
        start: {
          line: 31,
          column: 8
        },
        end: {
          line: 33,
          column: 12
        }
      },
      "17": {
        start: {
          line: 32,
          column: 12
        },
        end: {
          line: 32,
          column: 66
        }
      },
      "18": {
        start: {
          line: 32,
          column: 48
        },
        end: {
          line: 32,
          column: 64
        }
      },
      "19": {
        start: {
          line: 36,
          column: 8
        },
        end: {
          line: 38,
          column: 12
        }
      },
      "20": {
        start: {
          line: 37,
          column: 12
        },
        end: {
          line: 37,
          column: 66
        }
      },
      "21": {
        start: {
          line: 37,
          column: 48
        },
        end: {
          line: 37,
          column: 64
        }
      },
      "22": {
        start: {
          line: 41,
          column: 20
        },
        end: {
          line: 41,
          column: 42
        }
      },
      "23": {
        start: {
          line: 42,
          column: 8
        },
        end: {
          line: 44,
          column: 12
        }
      },
      "24": {
        start: {
          line: 43,
          column: 12
        },
        end: {
          line: 43,
          column: 66
        }
      },
      "25": {
        start: {
          line: 43,
          column: 48
        },
        end: {
          line: 43,
          column: 64
        }
      },
      "26": {
        start: {
          line: 47,
          column: 20
        },
        end: {
          line: 47,
          column: 42
        }
      },
      "27": {
        start: {
          line: 48,
          column: 8
        },
        end: {
          line: 50,
          column: 12
        }
      },
      "28": {
        start: {
          line: 49,
          column: 12
        },
        end: {
          line: 49,
          column: 66
        }
      },
      "29": {
        start: {
          line: 49,
          column: 48
        },
        end: {
          line: 49,
          column: 64
        }
      },
      "30": {
        start: {
          line: 52,
          column: 13
        },
        end: {
          line: 54,
          column: 6
        }
      },
      "31": {
        start: {
          line: 52,
          column: 41
        },
        end: {
          line: 54,
          column: 5
        }
      },
      "32": {
        start: {
          line: 56,
          column: 0
        },
        end: {
          line: 61,
          column: 26
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 10,
            column: 4
          },
          end: {
            line: 10,
            column: 5
          }
        },
        loc: {
          start: {
            line: 10,
            column: 22
          },
          end: {
            line: 13,
            column: 5
          }
        },
        line: 10
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 14,
            column: 4
          },
          end: {
            line: 14,
            column: 5
          }
        },
        loc: {
          start: {
            line: 14,
            column: 26
          },
          end: {
            line: 23,
            column: 5
          }
        },
        line: 14
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 24,
            column: 4
          },
          end: {
            line: 24,
            column: 5
          }
        },
        loc: {
          start: {
            line: 24,
            column: 22
          },
          end: {
            line: 29,
            column: 5
          }
        },
        line: 24
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 26,
            column: 62
          },
          end: {
            line: 26,
            column: 63
          }
        },
        loc: {
          start: {
            line: 26,
            column: 73
          },
          end: {
            line: 28,
            column: 9
          }
        },
        line: 26
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 27,
            column: 42
          },
          end: {
            line: 27,
            column: 43
          }
        },
        loc: {
          start: {
            line: 27,
            column: 48
          },
          end: {
            line: 27,
            column: 64
          }
        },
        line: 27
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 30,
            column: 4
          },
          end: {
            line: 30,
            column: 5
          }
        },
        loc: {
          start: {
            line: 30,
            column: 20
          },
          end: {
            line: 34,
            column: 5
          }
        },
        line: 30
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 31,
            column: 70
          },
          end: {
            line: 31,
            column: 71
          }
        },
        loc: {
          start: {
            line: 31,
            column: 81
          },
          end: {
            line: 33,
            column: 9
          }
        },
        line: 31
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 32,
            column: 42
          },
          end: {
            line: 32,
            column: 43
          }
        },
        loc: {
          start: {
            line: 32,
            column: 48
          },
          end: {
            line: 32,
            column: 64
          }
        },
        line: 32
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 35,
            column: 4
          },
          end: {
            line: 35,
            column: 5
          }
        },
        loc: {
          start: {
            line: 35,
            column: 26
          },
          end: {
            line: 39,
            column: 5
          }
        },
        line: 35
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 36,
            column: 83
          },
          end: {
            line: 36,
            column: 84
          }
        },
        loc: {
          start: {
            line: 36,
            column: 94
          },
          end: {
            line: 38,
            column: 9
          }
        },
        line: 36
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 37,
            column: 42
          },
          end: {
            line: 37,
            column: 43
          }
        },
        loc: {
          start: {
            line: 37,
            column: 48
          },
          end: {
            line: 37,
            column: 64
          }
        },
        line: 37
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 40,
            column: 4
          },
          end: {
            line: 40,
            column: 5
          }
        },
        loc: {
          start: {
            line: 40,
            column: 33
          },
          end: {
            line: 45,
            column: 5
          }
        },
        line: 40
      },
      "12": {
        name: "(anonymous_12)",
        decl: {
          start: {
            line: 42,
            column: 74
          },
          end: {
            line: 42,
            column: 75
          }
        },
        loc: {
          start: {
            line: 42,
            column: 85
          },
          end: {
            line: 44,
            column: 9
          }
        },
        line: 42
      },
      "13": {
        name: "(anonymous_13)",
        decl: {
          start: {
            line: 43,
            column: 42
          },
          end: {
            line: 43,
            column: 43
          }
        },
        loc: {
          start: {
            line: 43,
            column: 48
          },
          end: {
            line: 43,
            column: 64
          }
        },
        line: 43
      },
      "14": {
        name: "(anonymous_14)",
        decl: {
          start: {
            line: 46,
            column: 4
          },
          end: {
            line: 46,
            column: 5
          }
        },
        loc: {
          start: {
            line: 46,
            column: 25
          },
          end: {
            line: 51,
            column: 5
          }
        },
        line: 46
      },
      "15": {
        name: "(anonymous_15)",
        decl: {
          start: {
            line: 48,
            column: 65
          },
          end: {
            line: 48,
            column: 66
          }
        },
        loc: {
          start: {
            line: 48,
            column: 76
          },
          end: {
            line: 50,
            column: 9
          }
        },
        line: 48
      },
      "16": {
        name: "(anonymous_16)",
        decl: {
          start: {
            line: 49,
            column: 42
          },
          end: {
            line: 49,
            column: 43
          }
        },
        loc: {
          start: {
            line: 49,
            column: 48
          },
          end: {
            line: 49,
            column: 64
          }
        },
        line: 49
      },
      "17": {
        name: "(anonymous_17)",
        decl: {
          start: {
            line: 52,
            column: 35
          },
          end: {
            line: 52,
            column: 36
          }
        },
        loc: {
          start: {
            line: 52,
            column: 41
          },
          end: {
            line: 54,
            column: 5
          }
        },
        line: 52
      }
    },
    branchMap: {},
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0
    },
    b: {},
    inputSourceMap: {
      file: "C:\\Users\\Juli\xE1n\\Desktop\\front\\frontend-app\\src\\app\\mocks\\materiadata.service.mock.ts",
      mappings: "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",
      names: [],
      sources: ["C:\\Users\\Juli\xE1n\\Desktop\\front\\frontend-app\\src\\app\\mocks\\materiadata.service.mock.ts"],
      sourcesContent: ["import { HttpClient, HttpParams } from \"@angular/common/http\";\r\nimport { Injectable } from \"@angular/core\";\r\nimport { Observable, catchError, throwError } from \"rxjs\";\r\nimport { environment } from \"src/environments/environment.js\";\r\n\r\n\r\nexport interface CourseDataMock {\r\n    name: string;\r\n    totalhours: number;\r\n    email: string;\r\n    level: string;\r\n    desc: string;\r\n    icon: string;\r\n  }\r\n  \r\n  \r\n  @Injectable({\r\n    providedIn: 'root'\r\n  })\r\n  export class CoursedataServiceMock {\r\n    private apiUrl = environment.apiUrl + '/materia';\r\n  \r\n  \r\n    constructor(private http: HttpClient) { }\r\n  \r\n  \r\n    getCourse(courseData: CourseDataMock): Observable<any> {\r\n  \r\n      const params = new HttpParams()\r\n        .set('name', courseData.name)\r\n        .set('totalhours', courseData.totalhours.toString())\r\n        .set('email', courseData.email)\r\n        .set('level', courseData.level.toString())\r\n        .set('description', courseData.desc)\r\n        .set('icon', courseData.icon);\r\n  \r\n      return this.http.get(this.apiUrl, { params });\r\n    }\r\n  \r\n  \r\n    getCourseById(id: string): Observable<any> {\r\n      const url = `${this.apiUrl}/${id}`;\r\n      return this.http.get(url).pipe(\r\n        catchError((error: any) => {\r\n          return throwError(() => new Error(error));\r\n        })\r\n      );\r\n    }\r\n  \r\n  \r\n    getAllCourses(): Observable<any> {\r\n      return this.http.get(this.apiUrl).pipe(\r\n        catchError((error: any) => {\r\n          return throwError(() => new Error(error));\r\n        })\r\n  \r\n      )\r\n    }\r\n  \r\n    addCourse(courseData: any): Observable<any> {\r\n      return this.http.post(this.apiUrl, courseData).pipe(\r\n        catchError((error: any) => {\r\n          return throwError(() => new Error(error));\r\n        })\r\n      );\r\n    }\r\n  \r\n    updateCourse(id: string, courseData: any): Observable<any> {\r\n      const url = `${this.apiUrl}/${id}`;\r\n      return this.http.put(url, courseData).pipe(\r\n        catchError((error: any) => {\r\n          return throwError(() => new Error(error));\r\n        })\r\n      );\r\n    }\r\n    deleteCourseById(id:string):Observable<any>{\r\n      const url = `${this.apiUrl}/${id}`;\r\n      return this.http.delete(url).pipe(\r\n        catchError((error: any) => {\r\n          return throwError(() => new Error(error));\r\n        })\r\n      );\r\n    }\r\n  \r\n  }"],
      version: 3
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "c125bdc49719ca5f7b883c0415eefbb5fe04ebb4"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_2hdtg75bbe = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_2hdtg75bbe();
cov_2hdtg75bbe().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_2hdtg75bbe().s[1]++;
exports.CoursedataServiceMock = void 0;
const tslib_1 =
/* istanbul ignore next */
(cov_2hdtg75bbe().s[2]++, require("tslib"));
const http_1 =
/* istanbul ignore next */
(cov_2hdtg75bbe().s[3]++, require("@angular/common/http"));
const core_1 =
/* istanbul ignore next */
(cov_2hdtg75bbe().s[4]++, require("@angular/core"));
const rxjs_1 =
/* istanbul ignore next */
(cov_2hdtg75bbe().s[5]++, require("rxjs"));
const environment_js_1 =
/* istanbul ignore next */
(cov_2hdtg75bbe().s[6]++, require("src/environments/environment.js"));
let CoursedataServiceMock =
/* istanbul ignore next */
(cov_2hdtg75bbe().s[7]++, exports.CoursedataServiceMock = class CoursedataServiceMock {
  constructor(http) {
    /* istanbul ignore next */
    cov_2hdtg75bbe().f[0]++;
    cov_2hdtg75bbe().s[8]++;
    this.http = http;
    /* istanbul ignore next */
    cov_2hdtg75bbe().s[9]++;
    this.apiUrl = environment_js_1.environment.apiUrl + '/materia';
  }
  getCourse(courseData) {
    /* istanbul ignore next */
    cov_2hdtg75bbe().f[1]++;
    const params =
    /* istanbul ignore next */
    (cov_2hdtg75bbe().s[10]++, new http_1.HttpParams().set('name', courseData.name).set('totalhours', courseData.totalhours.toString()).set('email', courseData.email).set('level', courseData.level.toString()).set('description', courseData.desc).set('icon', courseData.icon));
    /* istanbul ignore next */
    cov_2hdtg75bbe().s[11]++;
    return this.http.get(this.apiUrl, {
      params
    });
  }
  getCourseById(id) {
    /* istanbul ignore next */
    cov_2hdtg75bbe().f[2]++;
    const url =
    /* istanbul ignore next */
    (cov_2hdtg75bbe().s[12]++, `${this.apiUrl}/${id}`);
    /* istanbul ignore next */
    cov_2hdtg75bbe().s[13]++;
    return this.http.get(url).pipe((0, rxjs_1.catchError)(error => {
      /* istanbul ignore next */
      cov_2hdtg75bbe().f[3]++;
      cov_2hdtg75bbe().s[14]++;
      return (0, rxjs_1.throwError)(() => {
        /* istanbul ignore next */
        cov_2hdtg75bbe().f[4]++;
        cov_2hdtg75bbe().s[15]++;
        return new Error(error);
      });
    }));
  }
  getAllCourses() {
    /* istanbul ignore next */
    cov_2hdtg75bbe().f[5]++;
    cov_2hdtg75bbe().s[16]++;
    return this.http.get(this.apiUrl).pipe((0, rxjs_1.catchError)(error => {
      /* istanbul ignore next */
      cov_2hdtg75bbe().f[6]++;
      cov_2hdtg75bbe().s[17]++;
      return (0, rxjs_1.throwError)(() => {
        /* istanbul ignore next */
        cov_2hdtg75bbe().f[7]++;
        cov_2hdtg75bbe().s[18]++;
        return new Error(error);
      });
    }));
  }
  addCourse(courseData) {
    /* istanbul ignore next */
    cov_2hdtg75bbe().f[8]++;
    cov_2hdtg75bbe().s[19]++;
    return this.http.post(this.apiUrl, courseData).pipe((0, rxjs_1.catchError)(error => {
      /* istanbul ignore next */
      cov_2hdtg75bbe().f[9]++;
      cov_2hdtg75bbe().s[20]++;
      return (0, rxjs_1.throwError)(() => {
        /* istanbul ignore next */
        cov_2hdtg75bbe().f[10]++;
        cov_2hdtg75bbe().s[21]++;
        return new Error(error);
      });
    }));
  }
  updateCourse(id, courseData) {
    /* istanbul ignore next */
    cov_2hdtg75bbe().f[11]++;
    const url =
    /* istanbul ignore next */
    (cov_2hdtg75bbe().s[22]++, `${this.apiUrl}/${id}`);
    /* istanbul ignore next */
    cov_2hdtg75bbe().s[23]++;
    return this.http.put(url, courseData).pipe((0, rxjs_1.catchError)(error => {
      /* istanbul ignore next */
      cov_2hdtg75bbe().f[12]++;
      cov_2hdtg75bbe().s[24]++;
      return (0, rxjs_1.throwError)(() => {
        /* istanbul ignore next */
        cov_2hdtg75bbe().f[13]++;
        cov_2hdtg75bbe().s[25]++;
        return new Error(error);
      });
    }));
  }
  deleteCourseById(id) {
    /* istanbul ignore next */
    cov_2hdtg75bbe().f[14]++;
    const url =
    /* istanbul ignore next */
    (cov_2hdtg75bbe().s[26]++, `${this.apiUrl}/${id}`);
    /* istanbul ignore next */
    cov_2hdtg75bbe().s[27]++;
    return this.http.delete(url).pipe((0, rxjs_1.catchError)(error => {
      /* istanbul ignore next */
      cov_2hdtg75bbe().f[15]++;
      cov_2hdtg75bbe().s[28]++;
      return (0, rxjs_1.throwError)(() => {
        /* istanbul ignore next */
        cov_2hdtg75bbe().f[16]++;
        cov_2hdtg75bbe().s[29]++;
        return new Error(error);
      });
    }));
  }
  static {
    /* istanbul ignore next */
    cov_2hdtg75bbe().s[30]++;
    this.ctorParameters = () => {
      /* istanbul ignore next */
      cov_2hdtg75bbe().f[17]++;
      cov_2hdtg75bbe().s[31]++;
      return [{
        type: http_1.HttpClient
      }];
    };
  }
});
/* istanbul ignore next */
cov_2hdtg75bbe().s[32]++;
exports.CoursedataServiceMock = CoursedataServiceMock = tslib_1.__decorate([(0, core_1.Injectable)({
  providedIn: 'root'
}), tslib_1.__metadata("design:paramtypes", [http_1.HttpClient])], CoursedataServiceMock);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,