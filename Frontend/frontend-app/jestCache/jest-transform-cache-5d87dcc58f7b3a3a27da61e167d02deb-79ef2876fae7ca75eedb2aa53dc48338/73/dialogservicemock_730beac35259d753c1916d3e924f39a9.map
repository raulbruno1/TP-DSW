{"version":3,"names":["cov_kogrh2rlt","actualCoverage","s","core_1","require","rxjs_1","DialogServiceMock","exports","openSuccessDialog","message","f","createMockDialogRef","openFailureDialog","openDeleteDialog","afterClosed","of","tslib_1","__decorate","Injectable","providedIn"],"sources":["C:\\Users\\Juli√°n\\Desktop\\front\\frontend-app\\src\\app\\mocks\\dialog.service.mock.ts"],"sourcesContent":["import { Injectable } from \"@angular/core\";\r\nimport { MatDialog, MatDialogRef } from \"@angular/material/dialog\";\r\nimport { SuccessDialogComponent } from \"../components/success-dialog/success-dialog.component\";\r\nimport { ErrorAvisoComponent } from \"../components/error-aviso/error-aviso.component\";\r\nimport { EliminarDialogComponent } from \"../components/eliminar-dialog/eliminar-dialog.component\";\r\nimport { of } from \"rxjs\";\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n  })\r\n  export class DialogServiceMock {\r\n    openSuccessDialog(message: string): MatDialogRef<any, any> {\r\n      return this.createMockDialogRef();\r\n    }\r\n  \r\n    openFailureDialog(message: string): MatDialogRef<any, any> {\r\n      return this.createMockDialogRef();\r\n    }\r\n  \r\n    openDeleteDialog(message: string): MatDialogRef<any, any> {\r\n      return this.createMockDialogRef();\r\n    }\r\n  \r\n    private createMockDialogRef(): MatDialogRef<any, any> {\r\n      return {\r\n        afterClosed: () => of({}),\r\n      } as MatDialogRef<any, any>;\r\n    }\r\n  }"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;IAqBK;IAAAA,aAAA,YAAAA,CAAA;MAAA,OAAAC,cAAA;IAAA;EAAA;EAAA,OAAAA,cAAA;AAAA;AAAAD,aAAA;AAAAA,aAAA,GAAAE,CAAA;;;;;;;;;;AArBL,MAAAC,MAAA;AAAA;AAAA,CAAAH,aAAA,GAAAE,CAAA,OAAAE,OAAA;AAKA,MAAAC,MAAA;AAAA;AAAA,CAAAL,aAAA,GAAAE,CAAA,OAAAE,OAAA;AAKS,IAAME,iBAAiB;AAAA;AAAA,CAAAN,aAAA,GAAAE,CAAA,OAAAK,OAAA,CAAAD,iBAAA,GAAvB,MAAMA,iBAAiB;EAC5BE,iBAAiBA,CAACC,OAAe;IAAA;IAAAT,aAAA,GAAAU,CAAA;IAAAV,aAAA,GAAAE,CAAA;IAC/B,OAAO,IAAI,CAACS,mBAAmB,EAAE;EACnC;EAEAC,iBAAiBA,CAACH,OAAe;IAAA;IAAAT,aAAA,GAAAU,CAAA;IAAAV,aAAA,GAAAE,CAAA;IAC/B,OAAO,IAAI,CAACS,mBAAmB,EAAE;EACnC;EAEAE,gBAAgBA,CAACJ,OAAe;IAAA;IAAAT,aAAA,GAAAU,CAAA;IAAAV,aAAA,GAAAE,CAAA;IAC9B,OAAO,IAAI,CAACS,mBAAmB,EAAE;EACnC;EAEQA,mBAAmBA,CAAA;IAAA;IAAAX,aAAA,GAAAU,CAAA;IAAAV,aAAA,GAAAE,CAAA;IACzB,OAAO;MACLY,WAAW,EAAEA,CAAA,KAAM;QAAA;QAAAd,aAAA,GAAAU,CAAA;QAAAV,aAAA,GAAAE,CAAA;QAAA,WAAAG,MAAA,CAAAU,EAAE,EAAC,EAAE,CAAC;MAAD;KACC;EAC7B;CACD;AAAA;AAAAf,aAAA,GAAAE,CAAA;4BAlBYI,iBAAiB,GAAAU,OAAA,CAAAC,UAAA,EAH/B,IAAAd,MAAA,CAAAe,UAAU,EAAC;EACRC,UAAU,EAAE;CACb,CAAC,C,EACWb,iBAAiB,CAkB7B"}