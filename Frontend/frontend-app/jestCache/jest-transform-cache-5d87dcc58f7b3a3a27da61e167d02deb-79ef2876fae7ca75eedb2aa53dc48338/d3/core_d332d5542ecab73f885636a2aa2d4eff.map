{
  "version": 3,
  "sources": ["C:\\Users\\Juli\u00E1n\\Desktop\\front\\frontend-app\\node_modules\\@angular\\material\\fesm2022\\core.mjs"],
  "sourcesContent": ["import * as i0 from '@angular/core';\nimport { Version, InjectionToken, inject, NgModule, Optional, Inject, LOCALE_ID, Injectable, Directive, Input, Component, ViewEncapsulation, ChangeDetectionStrategy, EventEmitter, Output, ViewChild, ANIMATION_MODULE_TYPE as ANIMATION_MODULE_TYPE$1, NgZone, ElementRef } from '@angular/core';\nimport * as i1 from '@angular/cdk/a11y';\nimport { isFakeMousedownFromScreenReader, isFakeTouchstartFromScreenReader } from '@angular/cdk/a11y';\nimport { BidiModule } from '@angular/cdk/bidi';\nimport { VERSION as VERSION$1 } from '@angular/cdk';\nimport * as i3 from '@angular/common';\nimport { DOCUMENT, CommonModule } from '@angular/common';\nimport * as i1$1 from '@angular/cdk/platform';\nimport { Platform, _isTestEnvironment, normalizePassiveListenerOptions, _getEventTarget } from '@angular/cdk/platform';\nimport { coerceBooleanProperty, coerceNumberProperty, coerceElement } from '@angular/cdk/coercion';\nimport { Observable, Subject } from 'rxjs';\nimport { startWith } from 'rxjs/operators';\nimport { ANIMATION_MODULE_TYPE } from '@angular/platform-browser/animations';\nimport { ENTER, SPACE, hasModifierKey } from '@angular/cdk/keycodes';\n\n/** Current version of Angular Material. */\nconst VERSION = new Version('16.2.8');\n\n/** @docs-private */\nclass AnimationCurves {\n    static { this.STANDARD_CURVE = 'cubic-bezier(0.4,0.0,0.2,1)'; }\n    static { this.DECELERATION_CURVE = 'cubic-bezier(0.0,0.0,0.2,1)'; }\n    static { this.ACCELERATION_CURVE = 'cubic-bezier(0.4,0.0,1,1)'; }\n    static { this.SHARP_CURVE = 'cubic-bezier(0.4,0.0,0.6,1)'; }\n}\n/** @docs-private */\nclass AnimationDurations {\n    static { this.COMPLEX = '375ms'; }\n    static { this.ENTERING = '225ms'; }\n    static { this.EXITING = '195ms'; }\n}\n\n/** @docs-private */\nfunction MATERIAL_SANITY_CHECKS_FACTORY() {\n    return true;\n}\n/** Injection token that configures whether the Material sanity checks are enabled. */\nconst MATERIAL_SANITY_CHECKS = new InjectionToken('mat-sanity-checks', {\n    providedIn: 'root',\n    factory: MATERIAL_SANITY_CHECKS_FACTORY,\n});\n/**\n * Module that captures anything that should be loaded and/or run for *all* Angular Material\n * components. This includes Bidi, etc.\n *\n * This module should be imported to each top-level component module (e.g., MatTabsModule).\n */\nclass MatCommonModule {\n    constructor(highContrastModeDetector, _sanityChecks, _document) {\n        this._sanityChecks = _sanityChecks;\n        this._document = _document;\n        /** Whether we've done the global sanity checks (e.g. a theme is loaded, there is a doctype). */\n        this._hasDoneGlobalChecks = false;\n        // While A11yModule also does this, we repeat it here to avoid importing A11yModule\n        // in MatCommonModule.\n        highContrastModeDetector._applyBodyHighContrastModeCssClasses();\n        if (!this._hasDoneGlobalChecks) {\n            this._hasDoneGlobalChecks = true;\n            if (typeof ngDevMode === 'undefined' || ngDevMode) {\n                // Inject in here so the reference to `Platform` can be removed in production mode.\n                const platform = inject(Platform, { optional: true });\n                if (this._checkIsEnabled('doctype')) {\n                    _checkDoctypeIsDefined(this._document);\n                }\n                if (this._checkIsEnabled('theme')) {\n                    _checkThemeIsPresent(this._document, !!platform?.isBrowser);\n                }\n                if (this._checkIsEnabled('version')) {\n                    _checkCdkVersionMatch();\n                }\n            }\n        }\n    }\n    /** Gets whether a specific sanity check is enabled. */\n    _checkIsEnabled(name) {\n        if (_isTestEnvironment()) {\n            return false;\n        }\n        if (typeof this._sanityChecks === 'boolean') {\n            return this._sanityChecks;\n        }\n        return !!this._sanityChecks[name];\n    }\n    static { this.\u0275fac = i0.\u0275\u0275ngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.1.1\", ngImport: i0, type: MatCommonModule, deps: [{ token: i1.HighContrastModeDetector }, { token: MATERIAL_SANITY_CHECKS, optional: true }, { token: DOCUMENT }], target: i0.\u0275\u0275FactoryTarget.NgModule }); }\n    static { this.\u0275mod = i0.\u0275\u0275ngDeclareNgModule({ minVersion: \"14.0.0\", version: \"16.1.1\", ngImport: i0, type: MatCommonModule, imports: [BidiModule], exports: [BidiModule] }); }\n    static { this.\u0275inj = i0.\u0275\u0275ngDeclareInjector({ minVersion: \"12.0.0\", version: \"16.1.1\", ngImport: i0, type: MatCommonModule, imports: [BidiModule, BidiModule] }); }\n}\ni0.\u0275\u0275ngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.1.1\", ngImport: i0, type: MatCommonModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [BidiModule],\n                    exports: [BidiModule],\n                }]\n        }], ctorParameters: function () { return [{ type: i1.HighContrastModeDetector }, { type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [MATERIAL_SANITY_CHECKS]\n                }] }, { type: Document, decorators: [{\n                    type: Inject,\n                    args: [DOCUMENT]\n                }] }]; } });\n/** Checks that the page has a doctype. */\nfunction _checkDoctypeIsDefined(doc) {\n    if (!doc.doctype) {\n        console.warn('Current document does not have a doctype. This may cause ' +\n            'some Angular Material components not to behave as expected.');\n    }\n}\n/** Checks that a theme has been included. */\nfunction _checkThemeIsPresent(doc, isBrowser) {\n    // We need to assert that the `body` is defined, because these checks run very early\n    // and the `body` won't be defined if the consumer put their scripts in the `head`.\n    if (!doc.body || !isBrowser) {\n        return;\n    }\n    const testElement = doc.createElement('div');\n    testElement.classList.add('mat-theme-loaded-marker');\n    doc.body.appendChild(testElement);\n    const computedStyle = getComputedStyle(testElement);\n    // In some situations the computed style of the test element can be null. For example in\n    // Firefox, the computed style is null if an application is running inside of a hidden iframe.\n    // See: https://bugzilla.mozilla.org/show_bug.cgi?id=548397\n    if (computedStyle && computedStyle.display !== 'none') {\n        console.warn('Could not find Angular Material core theme. Most Material ' +\n            'components may not work as expected. For more info refer ' +\n            'to the theming guide: https://material.angular.io/guide/theming');\n    }\n    testElement.remove();\n}\n/** Checks whether the Material version matches the CDK version. */\nfunction _checkCdkVersionMatch() {\n    if (VERSION.full !== VERSION$1.full) {\n        console.warn('The Angular Material version (' +\n            VERSION.full +\n            ') does not match ' +\n            'the Angular CDK version (' +\n            VERSION$1.full +\n            ').\\n' +\n            'Please ensure the versions of these two packages exactly match.');\n    }\n}\n\nfunction mixinDisabled(base) {\n    return class extends base {\n        get disabled() {\n            return this._disabled;\n        }\n        set disabled(value) {\n            this._disabled = coerceBooleanProperty(value);\n        }\n        constructor(...args) {\n            super(...args);\n            this._disabled = false;\n        }\n    };\n}\n\nfunction mixinColor(base, defaultColor) {\n    return class extends base {\n        get color() {\n            return this._color;\n        }\n        set color(value) {\n            const colorPalette = value || this.defaultColor;\n            if (colorPalette !== this._color) {\n                if (this._color) {\n                    this._elementRef.nativeElement.classList.remove(`mat-${this._color}`);\n                }\n                if (colorPalette) {\n                    this._elementRef.nativeElement.classList.add(`mat-${colorPalette}`);\n                }\n                this._color = colorPalette;\n            }\n        }\n        constructor(...args) {\n            super(...args);\n            this.defaultColor = defaultColor;\n            // Set the default color that can be specified from the mixin.\n            this.color = defaultColor;\n        }\n    };\n}\n\nfunction mixinDisableRipple(base) {\n    return class extends base {\n        /** Whether the ripple effect is disabled or not. */\n        get disableRipple() {\n            return this._disableRipple;\n        }\n        set disableRipple(value) {\n            this._disableRipple = coerceBooleanProperty(value);\n        }\n        constructor(...args) {\n            super(...args);\n            this._disableRipple = false;\n        }\n    };\n}\n\nfunction mixinTabIndex(base, defaultTabIndex = 0) {\n    return class extends base {\n        get tabIndex() {\n            return this.disabled ? -1 : this._tabIndex;\n        }\n        set tabIndex(value) {\n            // If the specified tabIndex value is null or undefined, fall back to the default value.\n            this._tabIndex = value != null ? coerceNumberProperty(value) : this.defaultTabIndex;\n        }\n        constructor(...args) {\n            super(...args);\n            this._tabIndex = defaultTabIndex;\n            this.defaultTabIndex = defaultTabIndex;\n        }\n    };\n}\n\nfunction mixinErrorState(base) {\n    return class extends base {\n        /** Updates the error state based on the provided error state matcher. */\n        updateErrorState() {\n            const oldState = this.errorState;\n            const parent = this._parentFormGroup || this._parentForm;\n            const matcher = this.errorStateMatcher || this._defaultErrorStateMatcher;\n            const control = this.ngControl ? this.ngControl.control : null;\n            const newState = matcher.isErrorState(control, parent);\n            if (newState !== oldState) {\n                this.errorState = newState;\n                this.stateChanges.next();\n            }\n        }\n        constructor(...args) {\n            super(...args);\n            /** Whether the component is in an error state. */\n            this.errorState = false;\n        }\n    };\n}\n\n/** Mixin to augment a directive with an initialized property that will emits when ngOnInit ends. */\nfunction mixinInitialized(base) {\n    return class extends base {\n        constructor(...args) {\n            super(...args);\n            /** Whether this directive has been marked as initialized. */\n            this._isInitialized = false;\n            /**\n             * List of subscribers that subscribed before the directive was initialized. Should be notified\n             * during _markInitialized. Set to null after pending subscribers are notified, and should\n             * not expect to be populated after.\n             */\n            this._pendingSubscribers = [];\n            /**\n             * Observable stream that emits when the directive initializes. If already initialized, the\n             * subscriber is stored to be notified once _markInitialized is called.\n             */\n            this.initialized = new Observable(subscriber => {\n                // If initialized, immediately notify the subscriber. Otherwise store the subscriber to notify\n                // when _markInitialized is called.\n                if (this._isInitialized) {\n                    this._notifySubscriber(subscriber);\n                }\n                else {\n                    this._pendingSubscribers.push(subscriber);\n                }\n            });\n        }\n        /**\n         * Marks the state as initialized and notifies pending subscribers. Should be called at the end\n         * of ngOnInit.\n         * @docs-private\n         */\n        _markInitialized() {\n            if (this._isInitialized && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n                throw Error('This directive has already been marked as initialized and ' +\n                    'should not be called twice.');\n            }\n            this._isInitialized = true;\n            this._pendingSubscribers.forEach(this._notifySubscriber);\n            this._pendingSubscribers = null;\n        }\n        /** Emits and completes the subscriber stream (should only emit once). */\n        _notifySubscriber(subscriber) {\n            subscriber.next();\n            subscriber.complete();\n        }\n    };\n}\n\n/** InjectionToken for datepicker that can be used to override default locale code. */\nconst MAT_DATE_LOCALE = new InjectionToken('MAT_DATE_LOCALE', {\n    providedIn: 'root',\n    factory: MAT_DATE_LOCALE_FACTORY,\n});\n/** @docs-private */\nfunction MAT_DATE_LOCALE_FACTORY() {\n    return inject(LOCALE_ID);\n}\n/** Adapts type `D` to be usable as a date by cdk-based components that work with dates. */\nclass DateAdapter {\n    constructor() {\n        this._localeChanges = new Subject();\n        /** A stream that emits when the locale changes. */\n        this.localeChanges = this._localeChanges;\n    }\n    /**\n     * Given a potential date object, returns that same date object if it is\n     * a valid date, or `null` if it's not a valid date.\n     * @param obj The object to check.\n     * @returns A date or `null`.\n     */\n    getValidDateOrNull(obj) {\n        return this.isDateInstance(obj) && this.isValid(obj) ? obj : null;\n    }\n    /**\n     * Attempts to deserialize a value to a valid date object. This is different from parsing in that\n     * deserialize should only accept non-ambiguous, locale-independent formats (e.g. a ISO 8601\n     * string). The default implementation does not allow any deserialization, it simply checks that\n     * the given value is already a valid date object or null. The `<mat-datepicker>` will call this\n     * method on all of its `@Input()` properties that accept dates. It is therefore possible to\n     * support passing values from your backend directly to these properties by overriding this method\n     * to also deserialize the format used by your backend.\n     * @param value The value to be deserialized into a date object.\n     * @returns The deserialized date object, either a valid date, null if the value can be\n     *     deserialized into a null date (e.g. the empty string), or an invalid date.\n     */\n    deserialize(value) {\n        if (value == null || (this.isDateInstance(value) && this.isValid(value))) {\n            return value;\n        }\n        return this.invalid();\n    }\n    /**\n     * Sets the locale used for all dates.\n     * @param locale The new locale.\n     */\n    setLocale(locale) {\n        this.locale = locale;\n        this._localeChanges.next();\n    }\n    /**\n     * Compares two dates.\n     * @param first The first date to compare.\n     * @param second The second date to compare.\n     * @returns 0 if the dates are equal, a number less than 0 if the first date is earlier,\n     *     a number greater than 0 if the first date is later.\n     */\n    compareDate(first, second) {\n        return (this.getYear(first) - this.getYear(second) ||\n            this.getMonth(first) - this.getMonth(second) ||\n            this.getDate(first) - this.getDate(second));\n    }\n    /**\n     * Checks if two dates are equal.\n     * @param first The first date to check.\n     * @param second The second date to check.\n     * @returns Whether the two dates are equal.\n     *     Null dates are considered equal to other null dates.\n     */\n    sameDate(first, second) {\n        if (first && second) {\n            let firstValid = this.isValid(first);\n            let secondValid = this.isValid(second);\n            if (firstValid && secondValid) {\n                return !this.compareDate(first, second);\n            }\n            return firstValid == secondValid;\n        }\n        return first == second;\n    }\n    /**\n     * Clamp the given date between min and max dates.\n     * @param date The date to clamp.\n     * @param min The minimum value to allow. If null or omitted no min is enforced.\n     * @param max The maximum value to allow. If null or omitted no max is enforced.\n     * @returns `min` if `date` is less than `min`, `max` if date is greater than `max`,\n     *     otherwise `date`.\n     */\n    clampDate(date, min, max) {\n        if (min && this.compareDate(date, min) < 0) {\n            return min;\n        }\n        if (max && this.compareDate(date, max) > 0) {\n            return max;\n        }\n        return date;\n    }\n}\n\nconst MAT_DATE_FORMATS = new InjectionToken('mat-date-formats');\n\n/**\n * Matches strings that have the form of a valid RFC 3339 string\n * (https://tools.ietf.org/html/rfc3339). Note that the string may not actually be a valid date\n * because the regex will match strings an with out of bounds month, date, etc.\n */\nconst ISO_8601_REGEX = /^\\d{4}-\\d{2}-\\d{2}(?:T\\d{2}:\\d{2}:\\d{2}(?:\\.\\d+)?(?:Z|(?:(?:\\+|-)\\d{2}:\\d{2}))?)?$/;\n/** Creates an array and fills it with values. */\nfunction range(length, valueFunction) {\n    const valuesArray = Array(length);\n    for (let i = 0; i < length; i++) {\n        valuesArray[i] = valueFunction(i);\n    }\n    return valuesArray;\n}\n/** Adapts the native JS Date for use with cdk-based components that work with dates. */\nclass NativeDateAdapter extends DateAdapter {\n    constructor(matDateLocale, \n    /**\n     * @deprecated No longer being used. To be removed.\n     * @breaking-change 14.0.0\n     */\n    _platform) {\n        super();\n        /**\n         * @deprecated No longer being used. To be removed.\n         * @breaking-change 14.0.0\n         */\n        this.useUtcForDisplay = false;\n        super.setLocale(matDateLocale);\n    }\n    getYear(date) {\n        return date.getFullYear();\n    }\n    getMonth(date) {\n        return date.getMonth();\n    }\n    getDate(date) {\n        return date.getDate();\n    }\n    getDayOfWeek(date) {\n        return date.getDay();\n    }\n    getMonthNames(style) {\n        const dtf = new Intl.DateTimeFormat(this.locale, { month: style, timeZone: 'utc' });\n        return range(12, i => this._format(dtf, new Date(2017, i, 1)));\n    }\n    getDateNames() {\n        const dtf = new Intl.DateTimeFormat(this.locale, { day: 'numeric', timeZone: 'utc' });\n        return range(31, i => this._format(dtf, new Date(2017, 0, i + 1)));\n    }\n    getDayOfWeekNames(style) {\n        const dtf = new Intl.DateTimeFormat(this.locale, { weekday: style, timeZone: 'utc' });\n        return range(7, i => this._format(dtf, new Date(2017, 0, i + 1)));\n    }\n    getYearName(date) {\n        const dtf = new Intl.DateTimeFormat(this.locale, { year: 'numeric', timeZone: 'utc' });\n        return this._format(dtf, date);\n    }\n    getFirstDayOfWeek() {\n        // We can't tell using native JS Date what the first day of the week is, we default to Sunday.\n        return 0;\n    }\n    getNumDaysInMonth(date) {\n        return this.getDate(this._createDateWithOverflow(this.getYear(date), this.getMonth(date) + 1, 0));\n    }\n    clone(date) {\n        return new Date(date.getTime());\n    }\n    createDate(year, month, date) {\n        if (typeof ngDevMode === 'undefined' || ngDevMode) {\n            // Check for invalid month and date (except upper bound on date which we have to check after\n            // creating the Date).\n            if (month < 0 || month > 11) {\n                throw Error(`Invalid month index \"${month}\". Month index has to be between 0 and 11.`);\n            }\n            if (date < 1) {\n                throw Error(`Invalid date \"${date}\". Date has to be greater than 0.`);\n            }\n        }\n        let result = this._createDateWithOverflow(year, month, date);\n        // Check that the date wasn't above the upper bound for the month, causing the month to overflow\n        if (result.getMonth() != month && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n            throw Error(`Invalid date \"${date}\" for month with index \"${month}\".`);\n        }\n        return result;\n    }\n    today() {\n        return new Date();\n    }\n    parse(value, parseFormat) {\n        // We have no way using the native JS Date to set the parse format or locale, so we ignore these\n        // parameters.\n        if (typeof value == 'number') {\n            return new Date(value);\n        }\n        return value ? new Date(Date.parse(value)) : null;\n    }\n    format(date, displayFormat) {\n        if (!this.isValid(date)) {\n            throw Error('NativeDateAdapter: Cannot format invalid date.');\n        }\n        const dtf = new Intl.DateTimeFormat(this.locale, { ...displayFormat, timeZone: 'utc' });\n        return this._format(dtf, date);\n    }\n    addCalendarYears(date, years) {\n        return this.addCalendarMonths(date, years * 12);\n    }\n    addCalendarMonths(date, months) {\n        let newDate = this._createDateWithOverflow(this.getYear(date), this.getMonth(date) + months, this.getDate(date));\n        // It's possible to wind up in the wrong month if the original month has more days than the new\n        // month. In this case we want to go to the last day of the desired month.\n        // Note: the additional + 12 % 12 ensures we end up with a positive number, since JS % doesn't\n        // guarantee this.\n        if (this.getMonth(newDate) != (((this.getMonth(date) + months) % 12) + 12) % 12) {\n            newDate = this._createDateWithOverflow(this.getYear(newDate), this.getMonth(newDate), 0);\n        }\n        return newDate;\n    }\n    addCalendarDays(date, days) {\n        return this._createDateWithOverflow(this.getYear(date), this.getMonth(date), this.getDate(date) + days);\n    }\n    toIso8601(date) {\n        return [\n            date.getUTCFullYear(),\n            this._2digit(date.getUTCMonth() + 1),\n            this._2digit(date.getUTCDate()),\n        ].join('-');\n    }\n    /**\n     * Returns the given value if given a valid Date or null. Deserializes valid ISO 8601 strings\n     * (https://www.ietf.org/rfc/rfc3339.txt) into valid Dates and empty string into null. Returns an\n     * invalid date for all other values.\n     */\n    deserialize(value) {\n        if (typeof value === 'string') {\n            if (!value) {\n                return null;\n            }\n            // The `Date` constructor accepts formats other than ISO 8601, so we need to make sure the\n            // string is the right format first.\n            if (ISO_8601_REGEX.test(value)) {\n                let date = new Date(value);\n                if (this.isValid(date)) {\n                    return date;\n                }\n            }\n        }\n        return super.deserialize(value);\n    }\n    isDateInstance(obj) {\n        return obj instanceof Date;\n    }\n    isValid(date) {\n        return !isNaN(date.getTime());\n    }\n    invalid() {\n        return new Date(NaN);\n    }\n    /** Creates a date but allows the month and date to overflow. */\n    _createDateWithOverflow(year, month, date) {\n        // Passing the year to the constructor causes year numbers <100 to be converted to 19xx.\n        // To work around this we use `setFullYear` and `setHours` instead.\n        const d = new Date();\n        d.setFullYear(year, month, date);\n        d.setHours(0, 0, 0, 0);\n        return d;\n    }\n    /**\n     * Pads a number to make it two digits.\n     * @param n The number to pad.\n     * @returns The padded number.\n     */\n    _2digit(n) {\n        return ('00' + n).slice(-2);\n    }\n    /**\n     * When converting Date object to string, javascript built-in functions may return wrong\n     * results because it applies its internal DST rules. The DST rules around the world change\n     * very frequently, and the current valid rule is not always valid in previous years though.\n     * We work around this problem building a new Date object which has its internal UTC\n     * representation with the local date and time.\n     * @param dtf Intl.DateTimeFormat object, containing the desired string format. It must have\n     *    timeZone set to 'utc' to work fine.\n     * @param date Date from which we want to get the string representation according to dtf\n     * @returns A Date object with its UTC representation based on the passed in date info\n     */\n    _format(dtf, date) {\n        // Passing the year to the constructor causes year numbers <100 to be converted to 19xx.\n        // To work around this we use `setUTCFullYear` and `setUTCHours` instead.\n        const d = new Date();\n        d.setUTCFullYear(date.getFullYear(), date.getMonth(), date.getDate());\n        d.setUTCHours(date.getHours(), date.getMinutes(), date.getSeconds(), date.getMilliseconds());\n        return dtf.format(d);\n    }\n    static { this.\u0275fac = i0.\u0275\u0275ngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.1.1\", ngImport: i0, type: NativeDateAdapter, deps: [{ token: MAT_DATE_LOCALE, optional: true }, { token: i1$1.Platform }], target: i0.\u0275\u0275FactoryTarget.Injectable }); }\n    static { this.\u0275prov = i0.\u0275\u0275ngDeclareInjectable({ minVersion: \"12.0.0\", version: \"16.1.1\", ngImport: i0, type: NativeDateAdapter }); }\n}\ni0.\u0275\u0275ngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.1.1\", ngImport: i0, type: NativeDateAdapter, decorators: [{\n            type: Injectable\n        }], ctorParameters: function () { return [{ type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [MAT_DATE_LOCALE]\n                }] }, { type: i1$1.Platform }]; } });\n\nconst MAT_NATIVE_DATE_FORMATS = {\n    parse: {\n        dateInput: null,\n    },\n    display: {\n        dateInput: { year: 'numeric', month: 'numeric', day: 'numeric' },\n        monthYearLabel: { year: 'numeric', month: 'short' },\n        dateA11yLabel: { year: 'numeric', month: 'long', day: 'numeric' },\n        monthYearA11yLabel: { year: 'numeric', month: 'long' },\n    },\n};\n\nclass NativeDateModule {\n    static { this.\u0275fac = i0.\u0275\u0275ngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.1.1\", ngImport: i0, type: NativeDateModule, deps: [], target: i0.\u0275\u0275FactoryTarget.NgModule }); }\n    static { this.\u0275mod = i0.\u0275\u0275ngDeclareNgModule({ minVersion: \"14.0.0\", version: \"16.1.1\", ngImport: i0, type: NativeDateModule }); }\n    static { this.\u0275inj = i0.\u0275\u0275ngDeclareInjector({ minVersion: \"12.0.0\", version: \"16.1.1\", ngImport: i0, type: NativeDateModule, providers: [{ provide: DateAdapter, useClass: NativeDateAdapter }] }); }\n}\ni0.\u0275\u0275ngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.1.1\", ngImport: i0, type: NativeDateModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    providers: [{ provide: DateAdapter, useClass: NativeDateAdapter }],\n                }]\n        }] });\nclass MatNativeDateModule {\n    static { this.\u0275fac = i0.\u0275\u0275ngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.1.1\", ngImport: i0, type: MatNativeDateModule, deps: [], target: i0.\u0275\u0275FactoryTarget.NgModule }); }\n    static { this.\u0275mod = i0.\u0275\u0275ngDeclareNgModule({ minVersion: \"14.0.0\", version: \"16.1.1\", ngImport: i0, type: MatNativeDateModule, imports: [NativeDateModule] }); }\n    static { this.\u0275inj = i0.\u0275\u0275ngDeclareInjector({ minVersion: \"12.0.0\", version: \"16.1.1\", ngImport: i0, type: MatNativeDateModule, providers: [{ provide: MAT_DATE_FORMATS, useValue: MAT_NATIVE_DATE_FORMATS }], imports: [NativeDateModule] }); }\n}\ni0.\u0275\u0275ngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.1.1\", ngImport: i0, type: MatNativeDateModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [NativeDateModule],\n                    providers: [{ provide: MAT_DATE_FORMATS, useValue: MAT_NATIVE_DATE_FORMATS }],\n                }]\n        }] });\n\n/** Error state matcher that matches when a control is invalid and dirty. */\nclass ShowOnDirtyErrorStateMatcher {\n    isErrorState(control, form) {\n        return !!(control && control.invalid && (control.dirty || (form && form.submitted)));\n    }\n    static { this.\u0275fac = i0.\u0275\u0275ngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.1.1\", ngImport: i0, type: ShowOnDirtyErrorStateMatcher, deps: [], target: i0.\u0275\u0275FactoryTarget.Injectable }); }\n    static { this.\u0275prov = i0.\u0275\u0275ngDeclareInjectable({ minVersion: \"12.0.0\", version: \"16.1.1\", ngImport: i0, type: ShowOnDirtyErrorStateMatcher }); }\n}\ni0.\u0275\u0275ngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.1.1\", ngImport: i0, type: ShowOnDirtyErrorStateMatcher, decorators: [{\n            type: Injectable\n        }] });\n/** Provider that defines how form controls behave with regards to displaying error messages. */\nclass ErrorStateMatcher {\n    isErrorState(control, form) {\n        return !!(control && control.invalid && (control.touched || (form && form.submitted)));\n    }\n    static { this.\u0275fac = i0.\u0275\u0275ngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.1.1\", ngImport: i0, type: ErrorStateMatcher, deps: [], target: i0.\u0275\u0275FactoryTarget.Injectable }); }\n    static { this.\u0275prov = i0.\u0275\u0275ngDeclareInjectable({ minVersion: \"12.0.0\", version: \"16.1.1\", ngImport: i0, type: ErrorStateMatcher, providedIn: 'root' }); }\n}\ni0.\u0275\u0275ngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.1.1\", ngImport: i0, type: ErrorStateMatcher, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root' }]\n        }] });\n\n/**\n * Shared directive to count lines inside a text area, such as a list item.\n * Line elements can be extracted with a @ContentChildren(MatLine) query, then\n * counted by checking the query list's length.\n */\nclass MatLine {\n    static { this.\u0275fac = i0.\u0275\u0275ngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.1.1\", ngImport: i0, type: MatLine, deps: [], target: i0.\u0275\u0275FactoryTarget.Directive }); }\n    static { this.\u0275dir = i0.\u0275\u0275ngDeclareDirective({ minVersion: \"14.0.0\", version: \"16.1.1\", type: MatLine, selector: \"[mat-line], [matLine]\", host: { classAttribute: \"mat-line\" }, ngImport: i0 }); }\n}\ni0.\u0275\u0275ngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.1.1\", ngImport: i0, type: MatLine, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[mat-line], [matLine]',\n                    host: { 'class': 'mat-line' },\n                }]\n        }] });\n/**\n * Helper that takes a query list of lines and sets the correct class on the host.\n * @docs-private\n */\nfunction setLines(lines, element, prefix = 'mat') {\n    // Note: doesn't need to unsubscribe, because `changes`\n    // gets completed by Angular when the view is destroyed.\n    lines.changes.pipe(startWith(lines)).subscribe(({ length }) => {\n        setClass(element, `${prefix}-2-line`, false);\n        setClass(element, `${prefix}-3-line`, false);\n        setClass(element, `${prefix}-multi-line`, false);\n        if (length === 2 || length === 3) {\n            setClass(element, `${prefix}-${length}-line`, true);\n        }\n        else if (length > 3) {\n            setClass(element, `${prefix}-multi-line`, true);\n        }\n    });\n}\n/** Adds or removes a class from an element. */\nfunction setClass(element, className, isAdd) {\n    element.nativeElement.classList.toggle(className, isAdd);\n}\nclass MatLineModule {\n    static { this.\u0275fac = i0.\u0275\u0275ngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.1.1\", ngImport: i0, type: MatLineModule, deps: [], target: i0.\u0275\u0275FactoryTarget.NgModule }); }\n    static { this.\u0275mod = i0.\u0275\u0275ngDeclareNgModule({ minVersion: \"14.0.0\", version: \"16.1.1\", ngImport: i0, type: MatLineModule, declarations: [MatLine], imports: [MatCommonModule], exports: [MatLine, MatCommonModule] }); }\n    static { this.\u0275inj = i0.\u0275\u0275ngDeclareInjector({ minVersion: \"12.0.0\", version: \"16.1.1\", ngImport: i0, type: MatLineModule, imports: [MatCommonModule, MatCommonModule] }); }\n}\ni0.\u0275\u0275ngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.1.1\", ngImport: i0, type: MatLineModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [MatCommonModule],\n                    exports: [MatLine, MatCommonModule],\n                    declarations: [MatLine],\n                }]\n        }] });\n\n/**\n * Reference to a previously launched ripple element.\n */\nclass RippleRef {\n    constructor(_renderer, \n    /** Reference to the ripple HTML element. */\n    element, \n    /** Ripple configuration used for the ripple. */\n    config, \n    /* Whether animations are forcibly disabled for ripples through CSS. */\n    _animationForciblyDisabledThroughCss = false) {\n        this._renderer = _renderer;\n        this.element = element;\n        this.config = config;\n        this._animationForciblyDisabledThroughCss = _animationForciblyDisabledThroughCss;\n        /** Current state of the ripple. */\n        this.state = 3 /* RippleState.HIDDEN */;\n    }\n    /** Fades out the ripple element. */\n    fadeOut() {\n        this._renderer.fadeOutRipple(this);\n    }\n}\n\n/** Options used to bind a passive capturing event. */\nconst passiveCapturingEventOptions$1 = normalizePassiveListenerOptions({\n    passive: true,\n    capture: true,\n});\n/** Manages events through delegation so that as few event handlers as possible are bound. */\nclass RippleEventManager {\n    constructor() {\n        this._events = new Map();\n        /** Event handler that is bound and which dispatches the events to the different targets. */\n        this._delegateEventHandler = (event) => {\n            const target = _getEventTarget(event);\n            if (target) {\n                this._events.get(event.type)?.forEach((handlers, element) => {\n                    if (element === target || element.contains(target)) {\n                        handlers.forEach(handler => handler.handleEvent(event));\n                    }\n                });\n            }\n        };\n    }\n    /** Adds an event handler. */\n    addHandler(ngZone, name, element, handler) {\n        const handlersForEvent = this._events.get(name);\n        if (handlersForEvent) {\n            const handlersForElement = handlersForEvent.get(element);\n            if (handlersForElement) {\n                handlersForElement.add(handler);\n            }\n            else {\n                handlersForEvent.set(element, new Set([handler]));\n            }\n        }\n        else {\n            this._events.set(name, new Map([[element, new Set([handler])]]));\n            ngZone.runOutsideAngular(() => {\n                document.addEventListener(name, this._delegateEventHandler, passiveCapturingEventOptions$1);\n            });\n        }\n    }\n    /** Removes an event handler. */\n    removeHandler(name, element, handler) {\n        const handlersForEvent = this._events.get(name);\n        if (!handlersForEvent) {\n            return;\n        }\n        const handlersForElement = handlersForEvent.get(element);\n        if (!handlersForElement) {\n            return;\n        }\n        handlersForElement.delete(handler);\n        if (handlersForElement.size === 0) {\n            handlersForEvent.delete(element);\n        }\n        if (handlersForEvent.size === 0) {\n            this._events.delete(name);\n            document.removeEventListener(name, this._delegateEventHandler, passiveCapturingEventOptions$1);\n        }\n    }\n}\n\n/**\n * Default ripple animation configuration for ripples without an explicit\n * animation config specified.\n */\nconst defaultRippleAnimationConfig = {\n    enterDuration: 225,\n    exitDuration: 150,\n};\n/**\n * Timeout for ignoring mouse events. Mouse events will be temporary ignored after touch\n * events to avoid synthetic mouse events.\n */\nconst ignoreMouseEventsTimeout = 800;\n/** Options used to bind a passive capturing event. */\nconst passiveCapturingEventOptions = normalizePassiveListenerOptions({\n    passive: true,\n    capture: true,\n});\n/** Events that signal that the pointer is down. */\nconst pointerDownEvents = ['mousedown', 'touchstart'];\n/** Events that signal that the pointer is up. */\nconst pointerUpEvents = ['mouseup', 'mouseleave', 'touchend', 'touchcancel'];\n/**\n * Helper service that performs DOM manipulations. Not intended to be used outside this module.\n * The constructor takes a reference to the ripple directive's host element and a map of DOM\n * event handlers to be installed on the element that triggers ripple animations.\n * This will eventually become a custom renderer once Angular support exists.\n * @docs-private\n */\nclass RippleRenderer {\n    static { this._eventManager = new RippleEventManager(); }\n    constructor(_target, _ngZone, elementOrElementRef, _platform) {\n        this._target = _target;\n        this._ngZone = _ngZone;\n        this._platform = _platform;\n        /** Whether the pointer is currently down or not. */\n        this._isPointerDown = false;\n        /**\n         * Map of currently active ripple references.\n         * The ripple reference is mapped to its element event listeners.\n         * The reason why `| null` is used is that event listeners are added only\n         * when the condition is truthy (see the `_startFadeOutTransition` method).\n         */\n        this._activeRipples = new Map();\n        /** Whether pointer-up event listeners have been registered. */\n        this._pointerUpEventsRegistered = false;\n        // Only do anything if we're on the browser.\n        if (_platform.isBrowser) {\n            this._containerElement = coerceElement(elementOrElementRef);\n        }\n    }\n    /**\n     * Fades in a ripple at the given coordinates.\n     * @param x Coordinate within the element, along the X axis at which to start the ripple.\n     * @param y Coordinate within the element, along the Y axis at which to start the ripple.\n     * @param config Extra ripple options.\n     */\n    fadeInRipple(x, y, config = {}) {\n        const containerRect = (this._containerRect =\n            this._containerRect || this._containerElement.getBoundingClientRect());\n        const animationConfig = { ...defaultRippleAnimationConfig, ...config.animation };\n        if (config.centered) {\n            x = containerRect.left + containerRect.width / 2;\n            y = containerRect.top + containerRect.height / 2;\n        }\n        const radius = config.radius || distanceToFurthestCorner(x, y, containerRect);\n        const offsetX = x - containerRect.left;\n        const offsetY = y - containerRect.top;\n        const enterDuration = animationConfig.enterDuration;\n        const ripple = document.createElement('div');\n        ripple.classList.add('mat-ripple-element');\n        ripple.style.left = `${offsetX - radius}px`;\n        ripple.style.top = `${offsetY - radius}px`;\n        ripple.style.height = `${radius * 2}px`;\n        ripple.style.width = `${radius * 2}px`;\n        // If a custom color has been specified, set it as inline style. If no color is\n        // set, the default color will be applied through the ripple theme styles.\n        if (config.color != null) {\n            ripple.style.backgroundColor = config.color;\n        }\n        ripple.style.transitionDuration = `${enterDuration}ms`;\n        this._containerElement.appendChild(ripple);\n        // By default the browser does not recalculate the styles of dynamically created\n        // ripple elements. This is critical to ensure that the `scale` animates properly.\n        // We enforce a style recalculation by calling `getComputedStyle` and *accessing* a property.\n        // See: https://gist.github.com/paulirish/5d52fb081b3570c81e3a\n        const computedStyles = window.getComputedStyle(ripple);\n        const userTransitionProperty = computedStyles.transitionProperty;\n        const userTransitionDuration = computedStyles.transitionDuration;\n        // Note: We detect whether animation is forcibly disabled through CSS (e.g. through\n        // `transition: none` or `display: none`). This is technically unexpected since animations are\n        // controlled through the animation config, but this exists for backwards compatibility. This\n        // logic does not need to be super accurate since it covers some edge cases which can be easily\n        // avoided by users.\n        const animationForciblyDisabledThroughCss = userTransitionProperty === 'none' ||\n            // Note: The canonical unit for serialized CSS `<time>` properties is seconds. Additionally\n            // some browsers expand the duration for every property (in our case `opacity` and `transform`).\n            userTransitionDuration === '0s' ||\n            userTransitionDuration === '0s, 0s' ||\n            // If the container is 0x0, it's likely `display: none`.\n            (containerRect.width === 0 && containerRect.height === 0);\n        // Exposed reference to the ripple that will be returned.\n        const rippleRef = new RippleRef(this, ripple, config, animationForciblyDisabledThroughCss);\n        // Start the enter animation by setting the transform/scale to 100%. The animation will\n        // execute as part of this statement because we forced a style recalculation before.\n        // Note: We use a 3d transform here in order to avoid an issue in Safari where\n        // the ripples aren't clipped when inside the shadow DOM (see #24028).\n        ripple.style.transform = 'scale3d(1, 1, 1)';\n        rippleRef.state = 0 /* RippleState.FADING_IN */;\n        if (!config.persistent) {\n            this._mostRecentTransientRipple = rippleRef;\n        }\n        let eventListeners = null;\n        // Do not register the `transition` event listener if fade-in and fade-out duration\n        // are set to zero. The events won't fire anyway and we can save resources here.\n        if (!animationForciblyDisabledThroughCss && (enterDuration || animationConfig.exitDuration)) {\n            this._ngZone.runOutsideAngular(() => {\n                const onTransitionEnd = () => this._finishRippleTransition(rippleRef);\n                const onTransitionCancel = () => this._destroyRipple(rippleRef);\n                ripple.addEventListener('transitionend', onTransitionEnd);\n                // If the transition is cancelled (e.g. due to DOM removal), we destroy the ripple\n                // directly as otherwise we would keep it part of the ripple container forever.\n                // https://www.w3.org/TR/css-transitions-1/#:~:text=no%20longer%20in%20the%20document.\n                ripple.addEventListener('transitioncancel', onTransitionCancel);\n                eventListeners = { onTransitionEnd, onTransitionCancel };\n            });\n        }\n        // Add the ripple reference to the list of all active ripples.\n        this._activeRipples.set(rippleRef, eventListeners);\n        // In case there is no fade-in transition duration, we need to manually call the transition\n        // end listener because `transitionend` doesn't fire if there is no transition.\n        if (animationForciblyDisabledThroughCss || !enterDuration) {\n            this._finishRippleTransition(rippleRef);\n        }\n        return rippleRef;\n    }\n    /** Fades out a ripple reference. */\n    fadeOutRipple(rippleRef) {\n        // For ripples already fading out or hidden, this should be a noop.\n        if (rippleRef.state === 2 /* RippleState.FADING_OUT */ || rippleRef.state === 3 /* RippleState.HIDDEN */) {\n            return;\n        }\n        const rippleEl = rippleRef.element;\n        const animationConfig = { ...defaultRippleAnimationConfig, ...rippleRef.config.animation };\n        // This starts the fade-out transition and will fire the transition end listener that\n        // removes the ripple element from the DOM.\n        rippleEl.style.transitionDuration = `${animationConfig.exitDuration}ms`;\n        rippleEl.style.opacity = '0';\n        rippleRef.state = 2 /* RippleState.FADING_OUT */;\n        // In case there is no fade-out transition duration, we need to manually call the\n        // transition end listener because `transitionend` doesn't fire if there is no transition.\n        if (rippleRef._animationForciblyDisabledThroughCss || !animationConfig.exitDuration) {\n            this._finishRippleTransition(rippleRef);\n        }\n    }\n    /** Fades out all currently active ripples. */\n    fadeOutAll() {\n        this._getActiveRipples().forEach(ripple => ripple.fadeOut());\n    }\n    /** Fades out all currently active non-persistent ripples. */\n    fadeOutAllNonPersistent() {\n        this._getActiveRipples().forEach(ripple => {\n            if (!ripple.config.persistent) {\n                ripple.fadeOut();\n            }\n        });\n    }\n    /** Sets up the trigger event listeners */\n    setupTriggerEvents(elementOrElementRef) {\n        const element = coerceElement(elementOrElementRef);\n        if (!this._platform.isBrowser || !element || element === this._triggerElement) {\n            return;\n        }\n        // Remove all previously registered event listeners from the trigger element.\n        this._removeTriggerEvents();\n        this._triggerElement = element;\n        // Use event delegation for the trigger events since they're\n        // set up during creation and are performance-sensitive.\n        pointerDownEvents.forEach(type => {\n            RippleRenderer._eventManager.addHandler(this._ngZone, type, element, this);\n        });\n    }\n    /**\n     * Handles all registered events.\n     * @docs-private\n     */\n    handleEvent(event) {\n        if (event.type === 'mousedown') {\n            this._onMousedown(event);\n        }\n        else if (event.type === 'touchstart') {\n            this._onTouchStart(event);\n        }\n        else {\n            this._onPointerUp();\n        }\n        // If pointer-up events haven't been registered yet, do so now.\n        // We do this on-demand in order to reduce the total number of event listeners\n        // registered by the ripples, which speeds up the rendering time for large UIs.\n        if (!this._pointerUpEventsRegistered) {\n            // The events for hiding the ripple are bound directly on the trigger, because:\n            // 1. Some of them occur frequently (e.g. `mouseleave`) and any advantage we get from\n            // delegation will be diminished by having to look through all the data structures often.\n            // 2. They aren't as performance-sensitive, because they're bound only after the user\n            // has interacted with an element.\n            this._ngZone.runOutsideAngular(() => {\n                pointerUpEvents.forEach(type => {\n                    this._triggerElement.addEventListener(type, this, passiveCapturingEventOptions);\n                });\n            });\n            this._pointerUpEventsRegistered = true;\n        }\n    }\n    /** Method that will be called if the fade-in or fade-in transition completed. */\n    _finishRippleTransition(rippleRef) {\n        if (rippleRef.state === 0 /* RippleState.FADING_IN */) {\n            this._startFadeOutTransition(rippleRef);\n        }\n        else if (rippleRef.state === 2 /* RippleState.FADING_OUT */) {\n            this._destroyRipple(rippleRef);\n        }\n    }\n    /**\n     * Starts the fade-out transition of the given ripple if it's not persistent and the pointer\n     * is not held down anymore.\n     */\n    _startFadeOutTransition(rippleRef) {\n        const isMostRecentTransientRipple = rippleRef === this._mostRecentTransientRipple;\n        const { persistent } = rippleRef.config;\n        rippleRef.state = 1 /* RippleState.VISIBLE */;\n        // When the timer runs out while the user has kept their pointer down, we want to\n        // keep only the persistent ripples and the latest transient ripple. We do this,\n        // because we don't want stacked transient ripples to appear after their enter\n        // animation has finished.\n        if (!persistent && (!isMostRecentTransientRipple || !this._isPointerDown)) {\n            rippleRef.fadeOut();\n        }\n    }\n    /** Destroys the given ripple by removing it from the DOM and updating its state. */\n    _destroyRipple(rippleRef) {\n        const eventListeners = this._activeRipples.get(rippleRef) ?? null;\n        this._activeRipples.delete(rippleRef);\n        // Clear out the cached bounding rect if we have no more ripples.\n        if (!this._activeRipples.size) {\n            this._containerRect = null;\n        }\n        // If the current ref is the most recent transient ripple, unset it\n        // avoid memory leaks.\n        if (rippleRef === this._mostRecentTransientRipple) {\n            this._mostRecentTransientRipple = null;\n        }\n        rippleRef.state = 3 /* RippleState.HIDDEN */;\n        if (eventListeners !== null) {\n            rippleRef.element.removeEventListener('transitionend', eventListeners.onTransitionEnd);\n            rippleRef.element.removeEventListener('transitioncancel', eventListeners.onTransitionCancel);\n        }\n        rippleRef.element.remove();\n    }\n    /** Function being called whenever the trigger is being pressed using mouse. */\n    _onMousedown(event) {\n        // Screen readers will fire fake mouse events for space/enter. Skip launching a\n        // ripple in this case for consistency with the non-screen-reader experience.\n        const isFakeMousedown = isFakeMousedownFromScreenReader(event);\n        const isSyntheticEvent = this._lastTouchStartEvent &&\n            Date.now() < this._lastTouchStartEvent + ignoreMouseEventsTimeout;\n        if (!this._target.rippleDisabled && !isFakeMousedown && !isSyntheticEvent) {\n            this._isPointerDown = true;\n            this.fadeInRipple(event.clientX, event.clientY, this._target.rippleConfig);\n        }\n    }\n    /** Function being called whenever the trigger is being pressed using touch. */\n    _onTouchStart(event) {\n        if (!this._target.rippleDisabled && !isFakeTouchstartFromScreenReader(event)) {\n            // Some browsers fire mouse events after a `touchstart` event. Those synthetic mouse\n            // events will launch a second ripple if we don't ignore mouse events for a specific\n            // time after a touchstart event.\n            this._lastTouchStartEvent = Date.now();\n            this._isPointerDown = true;\n            // Use `changedTouches` so we skip any touches where the user put\n            // their finger down, but used another finger to tap the element again.\n            const touches = event.changedTouches;\n            // According to the typings the touches should always be defined, but in some cases\n            // the browser appears to not assign them in tests which leads to flakes.\n            if (touches) {\n                for (let i = 0; i < touches.length; i++) {\n                    this.fadeInRipple(touches[i].clientX, touches[i].clientY, this._target.rippleConfig);\n                }\n            }\n        }\n    }\n    /** Function being called whenever the trigger is being released. */\n    _onPointerUp() {\n        if (!this._isPointerDown) {\n            return;\n        }\n        this._isPointerDown = false;\n        // Fade-out all ripples that are visible and not persistent.\n        this._getActiveRipples().forEach(ripple => {\n            // By default, only ripples that are completely visible will fade out on pointer release.\n            // If the `terminateOnPointerUp` option is set, ripples that still fade in will also fade out.\n            const isVisible = ripple.state === 1 /* RippleState.VISIBLE */ ||\n                (ripple.config.terminateOnPointerUp && ripple.state === 0 /* RippleState.FADING_IN */);\n            if (!ripple.config.persistent && isVisible) {\n                ripple.fadeOut();\n            }\n        });\n    }\n    _getActiveRipples() {\n        return Array.from(this._activeRipples.keys());\n    }\n    /** Removes previously registered event listeners from the trigger element. */\n    _removeTriggerEvents() {\n        const trigger = this._triggerElement;\n        if (trigger) {\n            pointerDownEvents.forEach(type => RippleRenderer._eventManager.removeHandler(type, trigger, this));\n            if (this._pointerUpEventsRegistered) {\n                pointerUpEvents.forEach(type => trigger.removeEventListener(type, this, passiveCapturingEventOptions));\n            }\n        }\n    }\n}\n/**\n * Returns the distance from the point (x, y) to the furthest corner of a rectangle.\n */\nfunction distanceToFurthestCorner(x, y, rect) {\n    const distX = Math.max(Math.abs(x - rect.left), Math.abs(x - rect.right));\n    const distY = Math.max(Math.abs(y - rect.top), Math.abs(y - rect.bottom));\n    return Math.sqrt(distX * distX + distY * distY);\n}\n\n/** Injection token that can be used to specify the global ripple options. */\nconst MAT_RIPPLE_GLOBAL_OPTIONS = new InjectionToken('mat-ripple-global-options');\nclass MatRipple {\n    /**\n     * Whether click events will not trigger the ripple. Ripples can be still launched manually\n     * by using the `launch()` method.\n     */\n    get disabled() {\n        return this._disabled;\n    }\n    set disabled(value) {\n        if (value) {\n            this.fadeOutAllNonPersistent();\n        }\n        this._disabled = value;\n        this._setupTriggerEventsIfEnabled();\n    }\n    /**\n     * The element that triggers the ripple when click events are received.\n     * Defaults to the directive's host element.\n     */\n    get trigger() {\n        return this._trigger || this._elementRef.nativeElement;\n    }\n    set trigger(trigger) {\n        this._trigger = trigger;\n        this._setupTriggerEventsIfEnabled();\n    }\n    constructor(_elementRef, ngZone, platform, globalOptions, _animationMode) {\n        this._elementRef = _elementRef;\n        this._animationMode = _animationMode;\n        /**\n         * If set, the radius in pixels of foreground ripples when fully expanded. If unset, the radius\n         * will be the distance from the center of the ripple to the furthest corner of the host element's\n         * bounding rectangle.\n         */\n        this.radius = 0;\n        this._disabled = false;\n        /** @docs-private Whether ripple directive is initialized and the input bindings are set. */\n        this._isInitialized = false;\n        this._globalOptions = globalOptions || {};\n        this._rippleRenderer = new RippleRenderer(this, ngZone, _elementRef, platform);\n    }\n    ngOnInit() {\n        this._isInitialized = true;\n        this._setupTriggerEventsIfEnabled();\n    }\n    ngOnDestroy() {\n        this._rippleRenderer._removeTriggerEvents();\n    }\n    /** Fades out all currently showing ripple elements. */\n    fadeOutAll() {\n        this._rippleRenderer.fadeOutAll();\n    }\n    /** Fades out all currently showing non-persistent ripple elements. */\n    fadeOutAllNonPersistent() {\n        this._rippleRenderer.fadeOutAllNonPersistent();\n    }\n    /**\n     * Ripple configuration from the directive's input values.\n     * @docs-private Implemented as part of RippleTarget\n     */\n    get rippleConfig() {\n        return {\n            centered: this.centered,\n            radius: this.radius,\n            color: this.color,\n            animation: {\n                ...this._globalOptions.animation,\n                ...(this._animationMode === 'NoopAnimations' ? { enterDuration: 0, exitDuration: 0 } : {}),\n                ...this.animation,\n            },\n            terminateOnPointerUp: this._globalOptions.terminateOnPointerUp,\n        };\n    }\n    /**\n     * Whether ripples on pointer-down are disabled or not.\n     * @docs-private Implemented as part of RippleTarget\n     */\n    get rippleDisabled() {\n        return this.disabled || !!this._globalOptions.disabled;\n    }\n    /** Sets up the trigger event listeners if ripples are enabled. */\n    _setupTriggerEventsIfEnabled() {\n        if (!this.disabled && this._isInitialized) {\n            this._rippleRenderer.setupTriggerEvents(this.trigger);\n        }\n    }\n    /** Launches a manual ripple at the specified coordinated or just by the ripple config. */\n    launch(configOrX, y = 0, config) {\n        if (typeof configOrX === 'number') {\n            return this._rippleRenderer.fadeInRipple(configOrX, y, { ...this.rippleConfig, ...config });\n        }\n        else {\n            return this._rippleRenderer.fadeInRipple(0, 0, { ...this.rippleConfig, ...configOrX });\n        }\n    }\n    static { this.\u0275fac = i0.\u0275\u0275ngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.1.1\", ngImport: i0, type: MatRipple, deps: [{ token: i0.ElementRef }, { token: i0.NgZone }, { token: i1$1.Platform }, { token: MAT_RIPPLE_GLOBAL_OPTIONS, optional: true }, { token: ANIMATION_MODULE_TYPE, optional: true }], target: i0.\u0275\u0275FactoryTarget.Directive }); }\n    static { this.\u0275dir = i0.\u0275\u0275ngDeclareDirective({ minVersion: \"14.0.0\", version: \"16.1.1\", type: MatRipple, selector: \"[mat-ripple], [matRipple]\", inputs: { color: [\"matRippleColor\", \"color\"], unbounded: [\"matRippleUnbounded\", \"unbounded\"], centered: [\"matRippleCentered\", \"centered\"], radius: [\"matRippleRadius\", \"radius\"], animation: [\"matRippleAnimation\", \"animation\"], disabled: [\"matRippleDisabled\", \"disabled\"], trigger: [\"matRippleTrigger\", \"trigger\"] }, host: { properties: { \"class.mat-ripple-unbounded\": \"unbounded\" }, classAttribute: \"mat-ripple\" }, exportAs: [\"matRipple\"], ngImport: i0 }); }\n}\ni0.\u0275\u0275ngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.1.1\", ngImport: i0, type: MatRipple, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[mat-ripple], [matRipple]',\n                    exportAs: 'matRipple',\n                    host: {\n                        'class': 'mat-ripple',\n                        '[class.mat-ripple-unbounded]': 'unbounded',\n                    },\n                }]\n        }], ctorParameters: function () { return [{ type: i0.ElementRef }, { type: i0.NgZone }, { type: i1$1.Platform }, { type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [MAT_RIPPLE_GLOBAL_OPTIONS]\n                }] }, { type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [ANIMATION_MODULE_TYPE]\n                }] }]; }, propDecorators: { color: [{\n                type: Input,\n                args: ['matRippleColor']\n            }], unbounded: [{\n                type: Input,\n                args: ['matRippleUnbounded']\n            }], centered: [{\n                type: Input,\n                args: ['matRippleCentered']\n            }], radius: [{\n                type: Input,\n                args: ['matRippleRadius']\n            }], animation: [{\n                type: Input,\n                args: ['matRippleAnimation']\n            }], disabled: [{\n                type: Input,\n                args: ['matRippleDisabled']\n            }], trigger: [{\n                type: Input,\n                args: ['matRippleTrigger']\n            }] } });\n\nclass MatRippleModule {\n    static { this.\u0275fac = i0.\u0275\u0275ngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.1.1\", ngImport: i0, type: MatRippleModule, deps: [], target: i0.\u0275\u0275FactoryTarget.NgModule }); }\n    static { this.\u0275mod = i0.\u0275\u0275ngDeclareNgModule({ minVersion: \"14.0.0\", version: \"16.1.1\", ngImport: i0, type: MatRippleModule, declarations: [MatRipple], imports: [MatCommonModule], exports: [MatRipple, MatCommonModule] }); }\n    static { this.\u0275inj = i0.\u0275\u0275ngDeclareInjector({ minVersion: \"12.0.0\", version: \"16.1.1\", ngImport: i0, type: MatRippleModule, imports: [MatCommonModule, MatCommonModule] }); }\n}\ni0.\u0275\u0275ngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.1.1\", ngImport: i0, type: MatRippleModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [MatCommonModule],\n                    exports: [MatRipple, MatCommonModule],\n                    declarations: [MatRipple],\n                }]\n        }] });\n\n/**\n * Component that shows a simplified checkbox without including any kind of \"real\" checkbox.\n * Meant to be used when the checkbox is purely decorative and a large number of them will be\n * included, such as for the options in a multi-select. Uses no SVGs or complex animations.\n * Note that theming is meant to be handled by the parent element, e.g.\n * `mat-primary .mat-pseudo-checkbox`.\n *\n * Note that this component will be completely invisible to screen-reader users. This is *not*\n * interchangeable with `<mat-checkbox>` and should *not* be used if the user would directly\n * interact with the checkbox. The pseudo-checkbox should only be used as an implementation detail\n * of more complex components that appropriately handle selected / checked state.\n * @docs-private\n */\nclass MatPseudoCheckbox {\n    constructor(_animationMode) {\n        this._animationMode = _animationMode;\n        /** Display state of the checkbox. */\n        this.state = 'unchecked';\n        /** Whether the checkbox is disabled. */\n        this.disabled = false;\n        /**\n         * Appearance of the pseudo checkbox. Default appearance of 'full' renders a checkmark/mixedmark\n         * indicator inside a square box. 'minimal' appearance only renders the checkmark/mixedmark.\n         */\n        this.appearance = 'full';\n    }\n    static { this.\u0275fac = i0.\u0275\u0275ngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.1.1\", ngImport: i0, type: MatPseudoCheckbox, deps: [{ token: ANIMATION_MODULE_TYPE, optional: true }], target: i0.\u0275\u0275FactoryTarget.Component }); }\n    static { this.\u0275cmp = i0.\u0275\u0275ngDeclareComponent({ minVersion: \"14.0.0\", version: \"16.1.1\", type: MatPseudoCheckbox, selector: \"mat-pseudo-checkbox\", inputs: { state: \"state\", disabled: \"disabled\", appearance: \"appearance\" }, host: { properties: { \"class.mat-pseudo-checkbox-indeterminate\": \"state === \\\"indeterminate\\\"\", \"class.mat-pseudo-checkbox-checked\": \"state === \\\"checked\\\"\", \"class.mat-pseudo-checkbox-disabled\": \"disabled\", \"class.mat-pseudo-checkbox-minimal\": \"appearance === \\\"minimal\\\"\", \"class.mat-pseudo-checkbox-full\": \"appearance === \\\"full\\\"\", \"class._mat-animation-noopable\": \"_animationMode === \\\"NoopAnimations\\\"\" }, classAttribute: \"mat-pseudo-checkbox\" }, ngImport: i0, template: '', isInline: true, styles: [\".mat-pseudo-checkbox{border-radius:2px;cursor:pointer;display:inline-block;vertical-align:middle;box-sizing:border-box;position:relative;flex-shrink:0;transition:border-color 90ms cubic-bezier(0, 0, 0.2, 0.1),background-color 90ms cubic-bezier(0, 0, 0.2, 0.1)}.mat-pseudo-checkbox::after{position:absolute;opacity:0;content:\\\"\\\";border-bottom:2px solid currentColor;transition:opacity 90ms cubic-bezier(0, 0, 0.2, 0.1)}.mat-pseudo-checkbox._mat-animation-noopable{transition:none !important;animation:none !important}.mat-pseudo-checkbox._mat-animation-noopable::after{transition:none}.mat-pseudo-checkbox-disabled{cursor:default}.mat-pseudo-checkbox-indeterminate::after{left:1px;opacity:1;border-radius:2px}.mat-pseudo-checkbox-checked::after{left:1px;border-left:2px solid currentColor;transform:rotate(-45deg);opacity:1;box-sizing:content-box}.mat-pseudo-checkbox-full{border:2px solid}.mat-pseudo-checkbox-full.mat-pseudo-checkbox-checked,.mat-pseudo-checkbox-full.mat-pseudo-checkbox-indeterminate{border-color:rgba(0,0,0,0)}.mat-pseudo-checkbox{width:18px;height:18px}.mat-pseudo-checkbox-minimal.mat-pseudo-checkbox-checked::after{width:14px;height:6px;transform-origin:center;top:-4.2426406871px;left:0;bottom:0;right:0;margin:auto}.mat-pseudo-checkbox-minimal.mat-pseudo-checkbox-indeterminate::after{top:8px;width:16px}.mat-pseudo-checkbox-full.mat-pseudo-checkbox-checked::after{width:10px;height:4px;transform-origin:center;top:-2.8284271247px;left:0;bottom:0;right:0;margin:auto}.mat-pseudo-checkbox-full.mat-pseudo-checkbox-indeterminate::after{top:6px;width:12px}\"], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None }); }\n}\ni0.\u0275\u0275ngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.1.1\", ngImport: i0, type: MatPseudoCheckbox, decorators: [{\n            type: Component,\n            args: [{ encapsulation: ViewEncapsulation.None, changeDetection: ChangeDetectionStrategy.OnPush, selector: 'mat-pseudo-checkbox', template: '', host: {\n                        'class': 'mat-pseudo-checkbox',\n                        '[class.mat-pseudo-checkbox-indeterminate]': 'state === \"indeterminate\"',\n                        '[class.mat-pseudo-checkbox-checked]': 'state === \"checked\"',\n                        '[class.mat-pseudo-checkbox-disabled]': 'disabled',\n                        '[class.mat-pseudo-checkbox-minimal]': 'appearance === \"minimal\"',\n                        '[class.mat-pseudo-checkbox-full]': 'appearance === \"full\"',\n                        '[class._mat-animation-noopable]': '_animationMode === \"NoopAnimations\"',\n                    }, styles: [\".mat-pseudo-checkbox{border-radius:2px;cursor:pointer;display:inline-block;vertical-align:middle;box-sizing:border-box;position:relative;flex-shrink:0;transition:border-color 90ms cubic-bezier(0, 0, 0.2, 0.1),background-color 90ms cubic-bezier(0, 0, 0.2, 0.1)}.mat-pseudo-checkbox::after{position:absolute;opacity:0;content:\\\"\\\";border-bottom:2px solid currentColor;transition:opacity 90ms cubic-bezier(0, 0, 0.2, 0.1)}.mat-pseudo-checkbox._mat-animation-noopable{transition:none !important;animation:none !important}.mat-pseudo-checkbox._mat-animation-noopable::after{transition:none}.mat-pseudo-checkbox-disabled{cursor:default}.mat-pseudo-checkbox-indeterminate::after{left:1px;opacity:1;border-radius:2px}.mat-pseudo-checkbox-checked::after{left:1px;border-left:2px solid currentColor;transform:rotate(-45deg);opacity:1;box-sizing:content-box}.mat-pseudo-checkbox-full{border:2px solid}.mat-pseudo-checkbox-full.mat-pseudo-checkbox-checked,.mat-pseudo-checkbox-full.mat-pseudo-checkbox-indeterminate{border-color:rgba(0,0,0,0)}.mat-pseudo-checkbox{width:18px;height:18px}.mat-pseudo-checkbox-minimal.mat-pseudo-checkbox-checked::after{width:14px;height:6px;transform-origin:center;top:-4.2426406871px;left:0;bottom:0;right:0;margin:auto}.mat-pseudo-checkbox-minimal.mat-pseudo-checkbox-indeterminate::after{top:8px;width:16px}.mat-pseudo-checkbox-full.mat-pseudo-checkbox-checked::after{width:10px;height:4px;transform-origin:center;top:-2.8284271247px;left:0;bottom:0;right:0;margin:auto}.mat-pseudo-checkbox-full.mat-pseudo-checkbox-indeterminate::after{top:6px;width:12px}\"] }]\n        }], ctorParameters: function () { return [{ type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [ANIMATION_MODULE_TYPE]\n                }] }]; }, propDecorators: { state: [{\n                type: Input\n            }], disabled: [{\n                type: Input\n            }], appearance: [{\n                type: Input\n            }] } });\n\nclass MatPseudoCheckboxModule {\n    static { this.\u0275fac = i0.\u0275\u0275ngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.1.1\", ngImport: i0, type: MatPseudoCheckboxModule, deps: [], target: i0.\u0275\u0275FactoryTarget.NgModule }); }\n    static { this.\u0275mod = i0.\u0275\u0275ngDeclareNgModule({ minVersion: \"14.0.0\", version: \"16.1.1\", ngImport: i0, type: MatPseudoCheckboxModule, declarations: [MatPseudoCheckbox], imports: [MatCommonModule], exports: [MatPseudoCheckbox] }); }\n    static { this.\u0275inj = i0.\u0275\u0275ngDeclareInjector({ minVersion: \"12.0.0\", version: \"16.1.1\", ngImport: i0, type: MatPseudoCheckboxModule, imports: [MatCommonModule] }); }\n}\ni0.\u0275\u0275ngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.1.1\", ngImport: i0, type: MatPseudoCheckboxModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [MatCommonModule],\n                    exports: [MatPseudoCheckbox],\n                    declarations: [MatPseudoCheckbox],\n                }]\n        }] });\n\n/**\n * Injection token used to provide the parent component to options.\n */\nconst MAT_OPTION_PARENT_COMPONENT = new InjectionToken('MAT_OPTION_PARENT_COMPONENT');\n\n// Notes on the accessibility pattern used for `mat-optgroup`.\n// The option group has two different \"modes\": regular and inert. The regular mode uses the\n// recommended a11y pattern which has `role=\"group\"` on the group element with `aria-labelledby`\n// pointing to the label. This works for `mat-select`, but it seems to hit a bug for autocomplete\n// under VoiceOver where the group doesn't get read out at all. The bug appears to be that if\n// there's __any__ a11y-related attribute on the group (e.g. `role` or `aria-labelledby`),\n// VoiceOver on Safari won't read it out.\n// We've introduced the `inert` mode as a workaround. Under this mode, all a11y attributes are\n// removed from the group, and we get the screen reader to read out the group label by mirroring it\n// inside an invisible element in the option. This is sub-optimal, because the screen reader will\n// repeat the group label on each navigation, whereas the default pattern only reads the group when\n// the user enters a new group. The following alternate approaches were considered:\n// 1. Reading out the group label using the `LiveAnnouncer` solves the problem, but we can't control\n//    when the text will be read out so sometimes it comes in too late or never if the user\n//    navigates quickly.\n// 2. `<mat-option aria-describedby=\"groupLabel\"` - This works on Safari, but VoiceOver in Chrome\n//    won't read out the description at all.\n// 3. `<mat-option aria-labelledby=\"optionLabel groupLabel\"` - This works on Chrome, but Safari\n//     doesn't read out the text at all. Furthermore, on\n// Boilerplate for applying mixins to MatOptgroup.\n/** @docs-private */\nconst _MatOptgroupMixinBase = mixinDisabled(class {\n});\n// Counter for unique group ids.\nlet _uniqueOptgroupIdCounter = 0;\nclass _MatOptgroupBase extends _MatOptgroupMixinBase {\n    constructor(parent) {\n        super();\n        /** Unique id for the underlying label. */\n        this._labelId = `mat-optgroup-label-${_uniqueOptgroupIdCounter++}`;\n        this._inert = parent?.inertGroups ?? false;\n    }\n    static { this.\u0275fac = i0.\u0275\u0275ngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.1.1\", ngImport: i0, type: _MatOptgroupBase, deps: [{ token: MAT_OPTION_PARENT_COMPONENT, optional: true }], target: i0.\u0275\u0275FactoryTarget.Directive }); }\n    static { this.\u0275dir = i0.\u0275\u0275ngDeclareDirective({ minVersion: \"14.0.0\", version: \"16.1.1\", type: _MatOptgroupBase, inputs: { label: \"label\" }, usesInheritance: true, ngImport: i0 }); }\n}\ni0.\u0275\u0275ngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.1.1\", ngImport: i0, type: _MatOptgroupBase, decorators: [{\n            type: Directive\n        }], ctorParameters: function () { return [{ type: undefined, decorators: [{\n                    type: Inject,\n                    args: [MAT_OPTION_PARENT_COMPONENT]\n                }, {\n                    type: Optional\n                }] }]; }, propDecorators: { label: [{\n                type: Input\n            }] } });\n/**\n * Injection token that can be used to reference instances of `MatOptgroup`. It serves as\n * alternative token to the actual `MatOptgroup` class which could cause unnecessary\n * retention of the class and its component metadata.\n */\nconst MAT_OPTGROUP = new InjectionToken('MatOptgroup');\n/**\n * Component that is used to group instances of `mat-option`.\n */\nclass MatOptgroup extends _MatOptgroupBase {\n    static { this.\u0275fac = i0.\u0275\u0275ngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.1.1\", ngImport: i0, type: MatOptgroup, deps: null, target: i0.\u0275\u0275FactoryTarget.Component }); }\n    static { this.\u0275cmp = i0.\u0275\u0275ngDeclareComponent({ minVersion: \"14.0.0\", version: \"16.1.1\", type: MatOptgroup, selector: \"mat-optgroup\", inputs: { disabled: \"disabled\" }, host: { properties: { \"attr.role\": \"_inert ? null : \\\"group\\\"\", \"attr.aria-disabled\": \"_inert ? null : disabled.toString()\", \"attr.aria-labelledby\": \"_inert ? null : _labelId\" }, classAttribute: \"mat-mdc-optgroup\" }, providers: [{ provide: MAT_OPTGROUP, useExisting: MatOptgroup }], exportAs: [\"matOptgroup\"], usesInheritance: true, ngImport: i0, template: \"<span\\n  class=\\\"mat-mdc-optgroup-label\\\"\\n  role=\\\"presentation\\\"\\n  [class.mdc-list-item--disabled]=\\\"disabled\\\"\\n  [id]=\\\"_labelId\\\">\\n  <span class=\\\"mdc-list-item__primary-text\\\">{{ label }} <ng-content></ng-content></span>\\n</span>\\n\\n<ng-content select=\\\"mat-option, ng-container\\\"></ng-content>\\n\", styles: [\".mat-mdc-optgroup{color:var(--mat-optgroup-label-text-color);font-family:var(--mat-optgroup-label-text-font);line-height:var(--mat-optgroup-label-text-line-height);font-size:var(--mat-optgroup-label-text-size);letter-spacing:var(--mat-optgroup-label-text-tracking);font-weight:var(--mat-optgroup-label-text-weight)}.mat-mdc-optgroup-label{display:flex;position:relative;align-items:center;justify-content:flex-start;overflow:hidden;padding:0;padding-left:16px;padding-right:16px;min-height:48px}.mat-mdc-optgroup-label:focus{outline:none}[dir=rtl] .mat-mdc-optgroup-label,.mat-mdc-optgroup-label[dir=rtl]{padding-left:16px;padding-right:16px}.mat-mdc-optgroup-label.mdc-list-item--disabled{opacity:.38}.mat-mdc-optgroup-label .mdc-list-item__primary-text{font-size:inherit;font-weight:inherit;letter-spacing:inherit;line-height:inherit;font-family:inherit;text-decoration:inherit;text-transform:inherit;white-space:normal}\"], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None }); }\n}\ni0.\u0275\u0275ngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.1.1\", ngImport: i0, type: MatOptgroup, decorators: [{\n            type: Component,\n            args: [{ selector: 'mat-optgroup', exportAs: 'matOptgroup', encapsulation: ViewEncapsulation.None, changeDetection: ChangeDetectionStrategy.OnPush, inputs: ['disabled'], host: {\n                        'class': 'mat-mdc-optgroup',\n                        '[attr.role]': '_inert ? null : \"group\"',\n                        '[attr.aria-disabled]': '_inert ? null : disabled.toString()',\n                        '[attr.aria-labelledby]': '_inert ? null : _labelId',\n                    }, providers: [{ provide: MAT_OPTGROUP, useExisting: MatOptgroup }], template: \"<span\\n  class=\\\"mat-mdc-optgroup-label\\\"\\n  role=\\\"presentation\\\"\\n  [class.mdc-list-item--disabled]=\\\"disabled\\\"\\n  [id]=\\\"_labelId\\\">\\n  <span class=\\\"mdc-list-item__primary-text\\\">{{ label }} <ng-content></ng-content></span>\\n</span>\\n\\n<ng-content select=\\\"mat-option, ng-container\\\"></ng-content>\\n\", styles: [\".mat-mdc-optgroup{color:var(--mat-optgroup-label-text-color);font-family:var(--mat-optgroup-label-text-font);line-height:var(--mat-optgroup-label-text-line-height);font-size:var(--mat-optgroup-label-text-size);letter-spacing:var(--mat-optgroup-label-text-tracking);font-weight:var(--mat-optgroup-label-text-weight)}.mat-mdc-optgroup-label{display:flex;position:relative;align-items:center;justify-content:flex-start;overflow:hidden;padding:0;padding-left:16px;padding-right:16px;min-height:48px}.mat-mdc-optgroup-label:focus{outline:none}[dir=rtl] .mat-mdc-optgroup-label,.mat-mdc-optgroup-label[dir=rtl]{padding-left:16px;padding-right:16px}.mat-mdc-optgroup-label.mdc-list-item--disabled{opacity:.38}.mat-mdc-optgroup-label .mdc-list-item__primary-text{font-size:inherit;font-weight:inherit;letter-spacing:inherit;line-height:inherit;font-family:inherit;text-decoration:inherit;text-transform:inherit;white-space:normal}\"] }]\n        }] });\n\n/**\n * Option IDs need to be unique across components, so this counter exists outside of\n * the component definition.\n */\nlet _uniqueIdCounter = 0;\n/** Event object emitted by MatOption when selected or deselected. */\nclass MatOptionSelectionChange {\n    constructor(\n    /** Reference to the option that emitted the event. */\n    source, \n    /** Whether the change in the option's value was a result of a user action. */\n    isUserInput = false) {\n        this.source = source;\n        this.isUserInput = isUserInput;\n    }\n}\nclass _MatOptionBase {\n    /** Whether the wrapping component is in multiple selection mode. */\n    get multiple() {\n        return this._parent && this._parent.multiple;\n    }\n    /** Whether or not the option is currently selected. */\n    get selected() {\n        return this._selected;\n    }\n    /** Whether the option is disabled. */\n    get disabled() {\n        return (this.group && this.group.disabled) || this._disabled;\n    }\n    set disabled(value) {\n        this._disabled = coerceBooleanProperty(value);\n    }\n    /** Whether ripples for the option are disabled. */\n    get disableRipple() {\n        return !!(this._parent && this._parent.disableRipple);\n    }\n    /** Whether to display checkmark for single-selection. */\n    get hideSingleSelectionIndicator() {\n        return !!(this._parent && this._parent.hideSingleSelectionIndicator);\n    }\n    constructor(_element, _changeDetectorRef, _parent, group) {\n        this._element = _element;\n        this._changeDetectorRef = _changeDetectorRef;\n        this._parent = _parent;\n        this.group = group;\n        this._selected = false;\n        this._active = false;\n        this._disabled = false;\n        this._mostRecentViewValue = '';\n        /** The unique ID of the option. */\n        this.id = `mat-option-${_uniqueIdCounter++}`;\n        /** Event emitted when the option is selected or deselected. */\n        // tslint:disable-next-line:no-output-on-prefix\n        this.onSelectionChange = new EventEmitter();\n        /** Emits when the state of the option changes and any parents have to be notified. */\n        this._stateChanges = new Subject();\n    }\n    /**\n     * Whether or not the option is currently active and ready to be selected.\n     * An active option displays styles as if it is focused, but the\n     * focus is actually retained somewhere else. This comes in handy\n     * for components like autocomplete where focus must remain on the input.\n     */\n    get active() {\n        return this._active;\n    }\n    /**\n     * The displayed value of the option. It is necessary to show the selected option in the\n     * select's trigger.\n     */\n    get viewValue() {\n        // TODO(kara): Add input property alternative for node envs.\n        return (this._text?.nativeElement.textContent || '').trim();\n    }\n    /** Selects the option. */\n    select(emitEvent = true) {\n        if (!this._selected) {\n            this._selected = true;\n            this._changeDetectorRef.markForCheck();\n            if (emitEvent) {\n                this._emitSelectionChangeEvent();\n            }\n        }\n    }\n    /** Deselects the option. */\n    deselect(emitEvent = true) {\n        if (this._selected) {\n            this._selected = false;\n            this._changeDetectorRef.markForCheck();\n            if (emitEvent) {\n                this._emitSelectionChangeEvent();\n            }\n        }\n    }\n    /** Sets focus onto this option. */\n    focus(_origin, options) {\n        // Note that we aren't using `_origin`, but we need to keep it because some internal consumers\n        // use `MatOption` in a `FocusKeyManager` and we need it to match `FocusableOption`.\n        const element = this._getHostElement();\n        if (typeof element.focus === 'function') {\n            element.focus(options);\n        }\n    }\n    /**\n     * This method sets display styles on the option to make it appear\n     * active. This is used by the ActiveDescendantKeyManager so key\n     * events will display the proper options as active on arrow key events.\n     */\n    setActiveStyles() {\n        if (!this._active) {\n            this._active = true;\n            this._changeDetectorRef.markForCheck();\n        }\n    }\n    /**\n     * This method removes display styles on the option that made it appear\n     * active. This is used by the ActiveDescendantKeyManager so key\n     * events will display the proper options as active on arrow key events.\n     */\n    setInactiveStyles() {\n        if (this._active) {\n            this._active = false;\n            this._changeDetectorRef.markForCheck();\n        }\n    }\n    /** Gets the label to be used when determining whether the option should be focused. */\n    getLabel() {\n        return this.viewValue;\n    }\n    /** Ensures the option is selected when activated from the keyboard. */\n    _handleKeydown(event) {\n        if ((event.keyCode === ENTER || event.keyCode === SPACE) && !hasModifierKey(event)) {\n            this._selectViaInteraction();\n            // Prevent the page from scrolling down and form submits.\n            event.preventDefault();\n        }\n    }\n    /**\n     * `Selects the option while indicating the selection came from the user. Used to\n     * determine if the select's view -> model callback should be invoked.`\n     */\n    _selectViaInteraction() {\n        if (!this.disabled) {\n            this._selected = this.multiple ? !this._selected : true;\n            this._changeDetectorRef.markForCheck();\n            this._emitSelectionChangeEvent(true);\n        }\n    }\n    /** Returns the correct tabindex for the option depending on disabled state. */\n    // This method is only used by `MatLegacyOption`. Keeping it here to avoid breaking the types.\n    // That's because `MatLegacyOption` use `MatOption` type in a few places such as\n    // `MatOptionSelectionChange`. It is safe to delete this when `MatLegacyOption` is deleted.\n    _getTabIndex() {\n        return this.disabled ? '-1' : '0';\n    }\n    /** Gets the host DOM element. */\n    _getHostElement() {\n        return this._element.nativeElement;\n    }\n    ngAfterViewChecked() {\n        // Since parent components could be using the option's label to display the selected values\n        // (e.g. `mat-select`) and they don't have a way of knowing if the option's label has changed\n        // we have to check for changes in the DOM ourselves and dispatch an event. These checks are\n        // relatively cheap, however we still limit them only to selected options in order to avoid\n        // hitting the DOM too often.\n        if (this._selected) {\n            const viewValue = this.viewValue;\n            if (viewValue !== this._mostRecentViewValue) {\n                if (this._mostRecentViewValue) {\n                    this._stateChanges.next();\n                }\n                this._mostRecentViewValue = viewValue;\n            }\n        }\n    }\n    ngOnDestroy() {\n        this._stateChanges.complete();\n    }\n    /** Emits the selection change event. */\n    _emitSelectionChangeEvent(isUserInput = false) {\n        this.onSelectionChange.emit(new MatOptionSelectionChange(this, isUserInput));\n    }\n    static { this.\u0275fac = i0.\u0275\u0275ngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.1.1\", ngImport: i0, type: _MatOptionBase, deps: \"invalid\", target: i0.\u0275\u0275FactoryTarget.Directive }); }\n    static { this.\u0275dir = i0.\u0275\u0275ngDeclareDirective({ minVersion: \"14.0.0\", version: \"16.1.1\", type: _MatOptionBase, inputs: { value: \"value\", id: \"id\", disabled: \"disabled\" }, outputs: { onSelectionChange: \"onSelectionChange\" }, viewQueries: [{ propertyName: \"_text\", first: true, predicate: [\"text\"], descendants: true, static: true }], ngImport: i0 }); }\n}\ni0.\u0275\u0275ngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.1.1\", ngImport: i0, type: _MatOptionBase, decorators: [{\n            type: Directive\n        }], ctorParameters: function () { return [{ type: i0.ElementRef }, { type: i0.ChangeDetectorRef }, { type: undefined }, { type: _MatOptgroupBase }]; }, propDecorators: { value: [{\n                type: Input\n            }], id: [{\n                type: Input\n            }], disabled: [{\n                type: Input\n            }], onSelectionChange: [{\n                type: Output\n            }], _text: [{\n                type: ViewChild,\n                args: ['text', { static: true }]\n            }] } });\n/**\n * Single option inside of a `<mat-select>` element.\n */\nclass MatOption extends _MatOptionBase {\n    constructor(element, changeDetectorRef, parent, group) {\n        super(element, changeDetectorRef, parent, group);\n    }\n    static { this.\u0275fac = i0.\u0275\u0275ngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.1.1\", ngImport: i0, type: MatOption, deps: [{ token: i0.ElementRef }, { token: i0.ChangeDetectorRef }, { token: MAT_OPTION_PARENT_COMPONENT, optional: true }, { token: MAT_OPTGROUP, optional: true }], target: i0.\u0275\u0275FactoryTarget.Component }); }\n    static { this.\u0275cmp = i0.\u0275\u0275ngDeclareComponent({ minVersion: \"14.0.0\", version: \"16.1.1\", type: MatOption, selector: \"mat-option\", host: { attributes: { \"role\": \"option\" }, listeners: { \"click\": \"_selectViaInteraction()\", \"keydown\": \"_handleKeydown($event)\" }, properties: { \"class.mdc-list-item--selected\": \"selected\", \"class.mat-mdc-option-multiple\": \"multiple\", \"class.mat-mdc-option-active\": \"active\", \"class.mdc-list-item--disabled\": \"disabled\", \"id\": \"id\", \"attr.aria-selected\": \"selected\", \"attr.aria-disabled\": \"disabled.toString()\" }, classAttribute: \"mat-mdc-option mdc-list-item\" }, exportAs: [\"matOption\"], usesInheritance: true, ngImport: i0, template: \"<!-- Set aria-hidden=\\\"true\\\" to this DOM node and other decorative nodes in this file. This might\\n be contributing to issue where sometimes VoiceOver focuses on a TextNode in the a11y tree instead\\n of the Option node (#23202). Most assistive technology will generally ignore non-role,\\n non-text-content elements. Adding aria-hidden seems to make VoiceOver behave more consistently. -->\\n<mat-pseudo-checkbox *ngIf=\\\"multiple\\\" class=\\\"mat-mdc-option-pseudo-checkbox\\\" [disabled]=\\\"disabled\\\"\\n    [state]=\\\"selected ? 'checked' : 'unchecked'\\\" aria-hidden=\\\"true\\\"></mat-pseudo-checkbox>\\n\\n<ng-content select=\\\"mat-icon\\\"></ng-content>\\n\\n<span class=\\\"mdc-list-item__primary-text\\\" #text><ng-content></ng-content></span>\\n\\n<!-- Render checkmark at the end for single-selection. -->\\n<mat-pseudo-checkbox *ngIf=\\\"!multiple && selected && !hideSingleSelectionIndicator\\\"\\n    class=\\\"mat-mdc-option-pseudo-checkbox\\\" [disabled]=\\\"disabled\\\" state=\\\"checked\\\"\\n    aria-hidden=\\\"true\\\" appearance=\\\"minimal\\\"></mat-pseudo-checkbox>\\n\\n<!-- See a11y notes inside optgroup.ts for context behind this element. -->\\n<span class=\\\"cdk-visually-hidden\\\" *ngIf=\\\"group && group._inert\\\">({{ group.label }})</span>\\n\\n<div class=\\\"mat-mdc-option-ripple mat-mdc-focus-indicator\\\" aria-hidden=\\\"true\\\" mat-ripple\\n     [matRippleTrigger]=\\\"_getHostElement()\\\" [matRippleDisabled]=\\\"disabled || disableRipple\\\">\\n</div>\\n\", styles: [\".mat-mdc-option{display:flex;position:relative;align-items:center;justify-content:flex-start;overflow:hidden;padding:0;padding-left:16px;padding-right:16px;-webkit-user-select:none;user-select:none;-moz-osx-font-smoothing:grayscale;-webkit-font-smoothing:antialiased;cursor:pointer;-webkit-tap-highlight-color:rgba(0,0,0,0);color:var(--mat-option-label-text-color);font-family:var(--mat-option-label-text-font);line-height:var(--mat-option-label-text-line-height);font-size:var(--mat-option-label-text-size);letter-spacing:var(--mat-option-label-text-tracking);font-weight:var(--mat-option-label-text-weight);min-height:48px}.mat-mdc-option:focus{outline:none}[dir=rtl] .mat-mdc-option,.mat-mdc-option[dir=rtl]{padding-left:16px;padding-right:16px}.mat-mdc-option:hover:not(.mdc-list-item--disabled){background-color:var(--mat-option-hover-state-layer-color)}.mat-mdc-option:focus.mdc-list-item,.mat-mdc-option.mat-mdc-option-active.mdc-list-item{background-color:var(--mat-option-focus-state-layer-color)}.mat-mdc-option.mdc-list-item--selected:not(.mdc-list-item--disabled) .mdc-list-item__primary-text{color:var(--mat-option-selected-state-label-text-color)}.mat-mdc-option.mdc-list-item--selected:not(.mdc-list-item--disabled):not(.mat-mdc-option-multiple){background-color:var(--mat-option-selected-state-layer-color)}.mat-mdc-option.mdc-list-item{align-items:center}.mat-mdc-option.mdc-list-item--disabled{cursor:default;pointer-events:none}.mat-mdc-option.mdc-list-item--disabled .mat-mdc-option-pseudo-checkbox,.mat-mdc-option.mdc-list-item--disabled .mdc-list-item__primary-text,.mat-mdc-option.mdc-list-item--disabled>mat-icon{opacity:.38}.mat-mdc-optgroup .mat-mdc-option:not(.mat-mdc-option-multiple){padding-left:32px}[dir=rtl] .mat-mdc-optgroup .mat-mdc-option:not(.mat-mdc-option-multiple){padding-left:16px;padding-right:32px}.mat-mdc-option .mat-icon,.mat-mdc-option .mat-pseudo-checkbox-full{margin-right:16px;flex-shrink:0}[dir=rtl] .mat-mdc-option .mat-icon,[dir=rtl] .mat-mdc-option .mat-pseudo-checkbox-full{margin-right:0;margin-left:16px}.mat-mdc-option .mat-pseudo-checkbox-minimal{margin-left:16px;flex-shrink:0}[dir=rtl] .mat-mdc-option .mat-pseudo-checkbox-minimal{margin-right:16px;margin-left:0}.mat-mdc-option .mat-mdc-option-ripple{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none}.mat-mdc-option .mdc-list-item__primary-text{white-space:normal;font-size:inherit;font-weight:inherit;letter-spacing:inherit;line-height:inherit;font-family:inherit;text-decoration:inherit;text-transform:inherit;margin-right:auto}[dir=rtl] .mat-mdc-option .mdc-list-item__primary-text{margin-right:0;margin-left:auto}.cdk-high-contrast-active .mat-mdc-option.mdc-list-item--selected:not(.mat-mdc-option-multiple)::after{content:\\\"\\\";position:absolute;top:50%;right:16px;transform:translateY(-50%);width:10px;height:0;border-bottom:solid 10px;border-radius:10px}[dir=rtl] .cdk-high-contrast-active .mat-mdc-option.mdc-list-item--selected:not(.mat-mdc-option-multiple)::after{right:auto;left:16px}.mat-mdc-option-active .mat-mdc-focus-indicator::before{content:\\\"\\\"}\"], dependencies: [{ kind: \"directive\", type: MatRipple, selector: \"[mat-ripple], [matRipple]\", inputs: [\"matRippleColor\", \"matRippleUnbounded\", \"matRippleCentered\", \"matRippleRadius\", \"matRippleAnimation\", \"matRippleDisabled\", \"matRippleTrigger\"], exportAs: [\"matRipple\"] }, { kind: \"directive\", type: i3.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { kind: \"component\", type: MatPseudoCheckbox, selector: \"mat-pseudo-checkbox\", inputs: [\"state\", \"disabled\", \"appearance\"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None }); }\n}\ni0.\u0275\u0275ngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.1.1\", ngImport: i0, type: MatOption, decorators: [{\n            type: Component,\n            args: [{ selector: 'mat-option', exportAs: 'matOption', host: {\n                        'role': 'option',\n                        '[class.mdc-list-item--selected]': 'selected',\n                        '[class.mat-mdc-option-multiple]': 'multiple',\n                        '[class.mat-mdc-option-active]': 'active',\n                        '[class.mdc-list-item--disabled]': 'disabled',\n                        '[id]': 'id',\n                        // Set aria-selected to false for non-selected items and true for selected items. Conform to\n                        // [WAI ARIA Listbox authoring practices guide](\n                        //  https://www.w3.org/WAI/ARIA/apg/patterns/listbox/), \"If any options are selected, each\n                        // selected option has either aria-selected or aria-checked  set to true. All options that are\n                        // selectable but not selected have either aria-selected or aria-checked set to false.\" Align\n                        // aria-selected implementation of Chips and List components.\n                        //\n                        // Set `aria-selected=\"false\"` on not-selected listbox options to fix VoiceOver announcing\n                        // every option as \"selected\" (#21491).\n                        '[attr.aria-selected]': 'selected',\n                        '[attr.aria-disabled]': 'disabled.toString()',\n                        '(click)': '_selectViaInteraction()',\n                        '(keydown)': '_handleKeydown($event)',\n                        'class': 'mat-mdc-option mdc-list-item',\n                    }, encapsulation: ViewEncapsulation.None, changeDetection: ChangeDetectionStrategy.OnPush, template: \"<!-- Set aria-hidden=\\\"true\\\" to this DOM node and other decorative nodes in this file. This might\\n be contributing to issue where sometimes VoiceOver focuses on a TextNode in the a11y tree instead\\n of the Option node (#23202). Most assistive technology will generally ignore non-role,\\n non-text-content elements. Adding aria-hidden seems to make VoiceOver behave more consistently. -->\\n<mat-pseudo-checkbox *ngIf=\\\"multiple\\\" class=\\\"mat-mdc-option-pseudo-checkbox\\\" [disabled]=\\\"disabled\\\"\\n    [state]=\\\"selected ? 'checked' : 'unchecked'\\\" aria-hidden=\\\"true\\\"></mat-pseudo-checkbox>\\n\\n<ng-content select=\\\"mat-icon\\\"></ng-content>\\n\\n<span class=\\\"mdc-list-item__primary-text\\\" #text><ng-content></ng-content></span>\\n\\n<!-- Render checkmark at the end for single-selection. -->\\n<mat-pseudo-checkbox *ngIf=\\\"!multiple && selected && !hideSingleSelectionIndicator\\\"\\n    class=\\\"mat-mdc-option-pseudo-checkbox\\\" [disabled]=\\\"disabled\\\" state=\\\"checked\\\"\\n    aria-hidden=\\\"true\\\" appearance=\\\"minimal\\\"></mat-pseudo-checkbox>\\n\\n<!-- See a11y notes inside optgroup.ts for context behind this element. -->\\n<span class=\\\"cdk-visually-hidden\\\" *ngIf=\\\"group && group._inert\\\">({{ group.label }})</span>\\n\\n<div class=\\\"mat-mdc-option-ripple mat-mdc-focus-indicator\\\" aria-hidden=\\\"true\\\" mat-ripple\\n     [matRippleTrigger]=\\\"_getHostElement()\\\" [matRippleDisabled]=\\\"disabled || disableRipple\\\">\\n</div>\\n\", styles: [\".mat-mdc-option{display:flex;position:relative;align-items:center;justify-content:flex-start;overflow:hidden;padding:0;padding-left:16px;padding-right:16px;-webkit-user-select:none;user-select:none;-moz-osx-font-smoothing:grayscale;-webkit-font-smoothing:antialiased;cursor:pointer;-webkit-tap-highlight-color:rgba(0,0,0,0);color:var(--mat-option-label-text-color);font-family:var(--mat-option-label-text-font);line-height:var(--mat-option-label-text-line-height);font-size:var(--mat-option-label-text-size);letter-spacing:var(--mat-option-label-text-tracking);font-weight:var(--mat-option-label-text-weight);min-height:48px}.mat-mdc-option:focus{outline:none}[dir=rtl] .mat-mdc-option,.mat-mdc-option[dir=rtl]{padding-left:16px;padding-right:16px}.mat-mdc-option:hover:not(.mdc-list-item--disabled){background-color:var(--mat-option-hover-state-layer-color)}.mat-mdc-option:focus.mdc-list-item,.mat-mdc-option.mat-mdc-option-active.mdc-list-item{background-color:var(--mat-option-focus-state-layer-color)}.mat-mdc-option.mdc-list-item--selected:not(.mdc-list-item--disabled) .mdc-list-item__primary-text{color:var(--mat-option-selected-state-label-text-color)}.mat-mdc-option.mdc-list-item--selected:not(.mdc-list-item--disabled):not(.mat-mdc-option-multiple){background-color:var(--mat-option-selected-state-layer-color)}.mat-mdc-option.mdc-list-item{align-items:center}.mat-mdc-option.mdc-list-item--disabled{cursor:default;pointer-events:none}.mat-mdc-option.mdc-list-item--disabled .mat-mdc-option-pseudo-checkbox,.mat-mdc-option.mdc-list-item--disabled .mdc-list-item__primary-text,.mat-mdc-option.mdc-list-item--disabled>mat-icon{opacity:.38}.mat-mdc-optgroup .mat-mdc-option:not(.mat-mdc-option-multiple){padding-left:32px}[dir=rtl] .mat-mdc-optgroup .mat-mdc-option:not(.mat-mdc-option-multiple){padding-left:16px;padding-right:32px}.mat-mdc-option .mat-icon,.mat-mdc-option .mat-pseudo-checkbox-full{margin-right:16px;flex-shrink:0}[dir=rtl] .mat-mdc-option .mat-icon,[dir=rtl] .mat-mdc-option .mat-pseudo-checkbox-full{margin-right:0;margin-left:16px}.mat-mdc-option .mat-pseudo-checkbox-minimal{margin-left:16px;flex-shrink:0}[dir=rtl] .mat-mdc-option .mat-pseudo-checkbox-minimal{margin-right:16px;margin-left:0}.mat-mdc-option .mat-mdc-option-ripple{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none}.mat-mdc-option .mdc-list-item__primary-text{white-space:normal;font-size:inherit;font-weight:inherit;letter-spacing:inherit;line-height:inherit;font-family:inherit;text-decoration:inherit;text-transform:inherit;margin-right:auto}[dir=rtl] .mat-mdc-option .mdc-list-item__primary-text{margin-right:0;margin-left:auto}.cdk-high-contrast-active .mat-mdc-option.mdc-list-item--selected:not(.mat-mdc-option-multiple)::after{content:\\\"\\\";position:absolute;top:50%;right:16px;transform:translateY(-50%);width:10px;height:0;border-bottom:solid 10px;border-radius:10px}[dir=rtl] .cdk-high-contrast-active .mat-mdc-option.mdc-list-item--selected:not(.mat-mdc-option-multiple)::after{right:auto;left:16px}.mat-mdc-option-active .mat-mdc-focus-indicator::before{content:\\\"\\\"}\"] }]\n        }], ctorParameters: function () { return [{ type: i0.ElementRef }, { type: i0.ChangeDetectorRef }, { type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [MAT_OPTION_PARENT_COMPONENT]\n                }] }, { type: MatOptgroup, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [MAT_OPTGROUP]\n                }] }]; } });\n/**\n * Counts the amount of option group labels that precede the specified option.\n * @param optionIndex Index of the option at which to start counting.\n * @param options Flat list of all of the options.\n * @param optionGroups Flat list of all of the option groups.\n * @docs-private\n */\nfunction _countGroupLabelsBeforeOption(optionIndex, options, optionGroups) {\n    if (optionGroups.length) {\n        let optionsArray = options.toArray();\n        let groups = optionGroups.toArray();\n        let groupCounter = 0;\n        for (let i = 0; i < optionIndex + 1; i++) {\n            if (optionsArray[i].group && optionsArray[i].group === groups[groupCounter]) {\n                groupCounter++;\n            }\n        }\n        return groupCounter;\n    }\n    return 0;\n}\n/**\n * Determines the position to which to scroll a panel in order for an option to be into view.\n * @param optionOffset Offset of the option from the top of the panel.\n * @param optionHeight Height of the options.\n * @param currentScrollPosition Current scroll position of the panel.\n * @param panelHeight Height of the panel.\n * @docs-private\n */\nfunction _getOptionScrollPosition(optionOffset, optionHeight, currentScrollPosition, panelHeight) {\n    if (optionOffset < currentScrollPosition) {\n        return optionOffset;\n    }\n    if (optionOffset + optionHeight > currentScrollPosition + panelHeight) {\n        return Math.max(0, optionOffset - panelHeight + optionHeight);\n    }\n    return currentScrollPosition;\n}\n\nclass MatOptionModule {\n    static { this.\u0275fac = i0.\u0275\u0275ngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.1.1\", ngImport: i0, type: MatOptionModule, deps: [], target: i0.\u0275\u0275FactoryTarget.NgModule }); }\n    static { this.\u0275mod = i0.\u0275\u0275ngDeclareNgModule({ minVersion: \"14.0.0\", version: \"16.1.1\", ngImport: i0, type: MatOptionModule, declarations: [MatOption, MatOptgroup], imports: [MatRippleModule, CommonModule, MatCommonModule, MatPseudoCheckboxModule], exports: [MatOption, MatOptgroup] }); }\n    static { this.\u0275inj = i0.\u0275\u0275ngDeclareInjector({ minVersion: \"12.0.0\", version: \"16.1.1\", ngImport: i0, type: MatOptionModule, imports: [MatRippleModule, CommonModule, MatCommonModule, MatPseudoCheckboxModule] }); }\n}\ni0.\u0275\u0275ngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.1.1\", ngImport: i0, type: MatOptionModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [MatRippleModule, CommonModule, MatCommonModule, MatPseudoCheckboxModule],\n                    exports: [MatOption, MatOptgroup],\n                    declarations: [MatOption, MatOptgroup],\n                }]\n        }] });\n\n/** The options for the MatRippleLoader's event listeners. */\nconst eventListenerOptions = { capture: true };\n/** The events that should trigger the initialization of the ripple. */\nconst rippleInteractionEvents = ['focus', 'click', 'mouseenter', 'touchstart'];\n/** The attribute attached to a component whose ripple has not yet been initialized. */\nconst matRippleUninitialized = 'mat-ripple-loader-uninitialized';\n/** Additional classes that should be added to the ripple when it is rendered. */\nconst matRippleClassName = 'mat-ripple-loader-class-name';\n/** Whether the ripple should be centered. */\nconst matRippleCentered = 'mat-ripple-loader-centered';\n/** Whether the ripple should be disabled. */\nconst matRippleDisabled = 'mat-ripple-loader-disabled';\n/**\n * Handles attaching ripples on demand.\n *\n * This service allows us to avoid eagerly creating & attaching MatRipples.\n * It works by creating & attaching a ripple only when a component is first interacted with.\n */\nclass MatRippleLoader {\n    constructor() {\n        this._document = inject(DOCUMENT, { optional: true });\n        this._animationMode = inject(ANIMATION_MODULE_TYPE$1, { optional: true });\n        this._globalRippleOptions = inject(MAT_RIPPLE_GLOBAL_OPTIONS, { optional: true });\n        this._platform = inject(Platform);\n        this._ngZone = inject(NgZone);\n        /** Handles creating and attaching component internals when a component it is initially interacted with. */\n        this._onInteraction = (event) => {\n            if (!(event.target instanceof HTMLElement)) {\n                return;\n            }\n            const eventTarget = event.target;\n            // TODO(wagnermaciel): Consider batching these events to improve runtime performance.\n            const element = eventTarget.closest(`[${matRippleUninitialized}]`);\n            if (element) {\n                this.createRipple(element);\n            }\n        };\n        this._ngZone.runOutsideAngular(() => {\n            for (const event of rippleInteractionEvents) {\n                this._document?.addEventListener(event, this._onInteraction, eventListenerOptions);\n            }\n        });\n    }\n    ngOnDestroy() {\n        for (const event of rippleInteractionEvents) {\n            this._document?.removeEventListener(event, this._onInteraction, eventListenerOptions);\n        }\n    }\n    /**\n     * Configures the ripple that will be rendered by the ripple loader.\n     *\n     * Stores the given information about how the ripple should be configured on the host\n     * element so that it can later be retrived & used when the ripple is actually created.\n     */\n    configureRipple(host, config) {\n        // Indicates that the ripple has not yet been rendered for this component.\n        host.setAttribute(matRippleUninitialized, '');\n        // Store the additional class name(s) that should be added to the ripple element.\n        if (config.className || !host.hasAttribute(matRippleClassName)) {\n            host.setAttribute(matRippleClassName, config.className || '');\n        }\n        // Store whether the ripple should be centered.\n        if (config.centered) {\n            host.setAttribute(matRippleCentered, '');\n        }\n        if (config.disabled) {\n            host.setAttribute(matRippleDisabled, '');\n        }\n    }\n    /** Returns the ripple instance for the given host element. */\n    getRipple(host) {\n        if (host.matRipple) {\n            return host.matRipple;\n        }\n        return this.createRipple(host);\n    }\n    /** Sets the disabled state on the ripple instance corresponding to the given host element. */\n    setDisabled(host, disabled) {\n        const ripple = host.matRipple;\n        // If the ripple has already been instantiated, just disable it.\n        if (ripple) {\n            ripple.disabled = disabled;\n            return;\n        }\n        // Otherwise, set an attribute so we know what the\n        // disabled state should be when the ripple is initialized.\n        if (disabled) {\n            host.setAttribute(matRippleDisabled, '');\n        }\n        else {\n            host.removeAttribute(matRippleDisabled);\n        }\n    }\n    /** Creates a MatRipple and appends it to the given element. */\n    createRipple(host) {\n        if (!this._document) {\n            return;\n        }\n        // Create the ripple element.\n        host.querySelector('.mat-ripple')?.remove();\n        const rippleEl = this._document.createElement('span');\n        rippleEl.classList.add('mat-ripple', host.getAttribute(matRippleClassName));\n        host.append(rippleEl);\n        // Create the MatRipple.\n        const ripple = new MatRipple(new ElementRef(rippleEl), this._ngZone, this._platform, this._globalRippleOptions ? this._globalRippleOptions : undefined, this._animationMode ? this._animationMode : undefined);\n        ripple._isInitialized = true;\n        ripple.trigger = host;\n        ripple.centered = host.hasAttribute(matRippleCentered);\n        ripple.disabled = host.hasAttribute(matRippleDisabled);\n        this.attachRipple(host, ripple);\n        return ripple;\n    }\n    attachRipple(host, ripple) {\n        host.removeAttribute(matRippleUninitialized);\n        host.matRipple = ripple;\n    }\n    static { this.\u0275fac = i0.\u0275\u0275ngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.1.1\", ngImport: i0, type: MatRippleLoader, deps: [], target: i0.\u0275\u0275FactoryTarget.Injectable }); }\n    static { this.\u0275prov = i0.\u0275\u0275ngDeclareInjectable({ minVersion: \"12.0.0\", version: \"16.1.1\", ngImport: i0, type: MatRippleLoader, providedIn: 'root' }); }\n}\ni0.\u0275\u0275ngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.1.1\", ngImport: i0, type: MatRippleLoader, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root' }]\n        }], ctorParameters: function () { return []; } });\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { AnimationCurves, AnimationDurations, DateAdapter, ErrorStateMatcher, MATERIAL_SANITY_CHECKS, MAT_DATE_FORMATS, MAT_DATE_LOCALE, MAT_DATE_LOCALE_FACTORY, MAT_NATIVE_DATE_FORMATS, MAT_OPTGROUP, MAT_OPTION_PARENT_COMPONENT, MAT_RIPPLE_GLOBAL_OPTIONS, MatCommonModule, MatLine, MatLineModule, MatNativeDateModule, MatOptgroup, MatOption, MatOptionModule, MatOptionSelectionChange, MatPseudoCheckbox, MatPseudoCheckboxModule, MatRipple, MatRippleLoader, MatRippleModule, NativeDateAdapter, NativeDateModule, RippleRef, RippleRenderer, ShowOnDirtyErrorStateMatcher, VERSION, _MatOptgroupBase, _MatOptionBase, _countGroupLabelsBeforeOption, _getOptionScrollPosition, defaultRippleAnimationConfig, mixinColor, mixinDisableRipple, mixinDisabled, mixinErrorState, mixinInitialized, mixinTabIndex, setLines };\n//# sourceMappingURL=core.mjs.map\n"],
  "mappings": "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",
  "names": ["VERSION$1", "ANIMATION_MODULE_TYPE$1"]
}
