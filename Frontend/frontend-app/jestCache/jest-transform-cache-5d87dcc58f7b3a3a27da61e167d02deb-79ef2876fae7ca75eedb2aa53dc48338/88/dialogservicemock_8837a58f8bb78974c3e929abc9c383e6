0761b9115cda03501d45c591cb5810bd
"use strict";

/* istanbul ignore next */
function cov_kogrh2rlt() {
  var path = "C:\\Users\\Juli\xE1n\\Desktop\\front\\frontend-app\\src\\app\\mocks\\dialog.service.mock.ts";
  var hash = "45a6860a86b4ae7ab0958209ab2fa0b0ff077375";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "C:\\Users\\Juli\xE1n\\Desktop\\front\\frontend-app\\src\\app\\mocks\\dialog.service.mock.ts",
    statementMap: {
      "0": {
        start: {
          line: 2,
          column: 0
        },
        end: {
          line: 2,
          column: 62
        }
      },
      "1": {
        start: {
          line: 3,
          column: 0
        },
        end: {
          line: 3,
          column: 35
        }
      },
      "2": {
        start: {
          line: 4,
          column: 16
        },
        end: {
          line: 4,
          column: 32
        }
      },
      "3": {
        start: {
          line: 5,
          column: 15
        },
        end: {
          line: 5,
          column: 39
        }
      },
      "4": {
        start: {
          line: 6,
          column: 15
        },
        end: {
          line: 6,
          column: 30
        }
      },
      "5": {
        start: {
          line: 7,
          column: 24
        },
        end: {
          line: 22,
          column: 1
        }
      },
      "6": {
        start: {
          line: 9,
          column: 8
        },
        end: {
          line: 9,
          column: 42
        }
      },
      "7": {
        start: {
          line: 12,
          column: 8
        },
        end: {
          line: 12,
          column: 42
        }
      },
      "8": {
        start: {
          line: 15,
          column: 8
        },
        end: {
          line: 15,
          column: 42
        }
      },
      "9": {
        start: {
          line: 18,
          column: 8
        },
        end: {
          line: 20,
          column: 10
        }
      },
      "10": {
        start: {
          line: 19,
          column: 31
        },
        end: {
          line: 19,
          column: 49
        }
      },
      "11": {
        start: {
          line: 23,
          column: 0
        },
        end: {
          line: 27,
          column: 22
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 8,
            column: 4
          },
          end: {
            line: 8,
            column: 5
          }
        },
        loc: {
          start: {
            line: 8,
            column: 31
          },
          end: {
            line: 10,
            column: 5
          }
        },
        line: 8
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 11,
            column: 4
          },
          end: {
            line: 11,
            column: 5
          }
        },
        loc: {
          start: {
            line: 11,
            column: 31
          },
          end: {
            line: 13,
            column: 5
          }
        },
        line: 11
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 14,
            column: 4
          },
          end: {
            line: 14,
            column: 5
          }
        },
        loc: {
          start: {
            line: 14,
            column: 30
          },
          end: {
            line: 16,
            column: 5
          }
        },
        line: 14
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 17,
            column: 4
          },
          end: {
            line: 17,
            column: 5
          }
        },
        loc: {
          start: {
            line: 17,
            column: 26
          },
          end: {
            line: 21,
            column: 5
          }
        },
        line: 17
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 19,
            column: 25
          },
          end: {
            line: 19,
            column: 26
          }
        },
        loc: {
          start: {
            line: 19,
            column: 31
          },
          end: {
            line: 19,
            column: 49
          }
        },
        line: 19
      }
    },
    branchMap: {},
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0
    },
    b: {},
    inputSourceMap: {
      file: "C:\\Users\\Juli\xE1n\\Desktop\\front\\frontend-app\\src\\app\\mocks\\dialog.service.mock.ts",
      mappings: ";;;;AAAA,wCAA2C;AAK3C,+BAA0B;AAKjB,IAAM,iBAAiB,+BAAvB,MAAM,iBAAiB;IAC5B,iBAAiB,CAAC,OAAe;QAC/B,OAAO,IAAI,CAAC,mBAAmB,EAAE,CAAC;IACpC,CAAC;IAED,iBAAiB,CAAC,OAAe;QAC/B,OAAO,IAAI,CAAC,mBAAmB,EAAE,CAAC;IACpC,CAAC;IAED,gBAAgB,CAAC,OAAe;QAC9B,OAAO,IAAI,CAAC,mBAAmB,EAAE,CAAC;IACpC,CAAC;IAEO,mBAAmB;QACzB,OAAO;YACL,WAAW,EAAE,GAAG,EAAE,CAAC,IAAA,SAAE,EAAC,EAAE,CAAC;SACA,CAAC;IAC9B,CAAC;CACF,CAAA;4BAlBY,iBAAiB;IAH/B,IAAA,iBAAU,EAAC;QACR,UAAU,EAAE,MAAM;KACnB,CAAC;GACW,iBAAiB,CAkB7B",
      names: [],
      sources: ["C:\\Users\\Juli\xE1n\\Desktop\\front\\frontend-app\\src\\app\\mocks\\dialog.service.mock.ts"],
      sourcesContent: ["import { Injectable } from \"@angular/core\";\r\nimport { MatDialog, MatDialogRef } from \"@angular/material/dialog\";\r\nimport { SuccessDialogComponent } from \"../components/success-dialog/success-dialog.component\";\r\nimport { ErrorAvisoComponent } from \"../components/error-aviso/error-aviso.component\";\r\nimport { EliminarDialogComponent } from \"../components/eliminar-dialog/eliminar-dialog.component\";\r\nimport { of } from \"rxjs\";\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n  })\r\n  export class DialogServiceMock {\r\n    openSuccessDialog(message: string): MatDialogRef<any, any> {\r\n      return this.createMockDialogRef();\r\n    }\r\n  \r\n    openFailureDialog(message: string): MatDialogRef<any, any> {\r\n      return this.createMockDialogRef();\r\n    }\r\n  \r\n    openDeleteDialog(message: string): MatDialogRef<any, any> {\r\n      return this.createMockDialogRef();\r\n    }\r\n  \r\n    private createMockDialogRef(): MatDialogRef<any, any> {\r\n      return {\r\n        afterClosed: () => of({}),\r\n      } as MatDialogRef<any, any>;\r\n    }\r\n  }"],
      version: 3
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "45a6860a86b4ae7ab0958209ab2fa0b0ff077375"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_kogrh2rlt = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_kogrh2rlt();
cov_kogrh2rlt().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_kogrh2rlt().s[1]++;
exports.DialogServiceMock = void 0;
const tslib_1 =
/* istanbul ignore next */
(cov_kogrh2rlt().s[2]++, require("tslib"));
const core_1 =
/* istanbul ignore next */
(cov_kogrh2rlt().s[3]++, require("@angular/core"));
const rxjs_1 =
/* istanbul ignore next */
(cov_kogrh2rlt().s[4]++, require("rxjs"));
let DialogServiceMock =
/* istanbul ignore next */
(cov_kogrh2rlt().s[5]++, exports.DialogServiceMock = class DialogServiceMock {
  openSuccessDialog(message) {
    /* istanbul ignore next */
    cov_kogrh2rlt().f[0]++;
    cov_kogrh2rlt().s[6]++;
    return this.createMockDialogRef();
  }
  openFailureDialog(message) {
    /* istanbul ignore next */
    cov_kogrh2rlt().f[1]++;
    cov_kogrh2rlt().s[7]++;
    return this.createMockDialogRef();
  }
  openDeleteDialog(message) {
    /* istanbul ignore next */
    cov_kogrh2rlt().f[2]++;
    cov_kogrh2rlt().s[8]++;
    return this.createMockDialogRef();
  }
  createMockDialogRef() {
    /* istanbul ignore next */
    cov_kogrh2rlt().f[3]++;
    cov_kogrh2rlt().s[9]++;
    return {
      afterClosed: () => {
        /* istanbul ignore next */
        cov_kogrh2rlt().f[4]++;
        cov_kogrh2rlt().s[10]++;
        return (0, rxjs_1.of)({});
      }
    };
  }
});
/* istanbul ignore next */
cov_kogrh2rlt().s[11]++;
exports.DialogServiceMock = DialogServiceMock = tslib_1.__decorate([(0, core_1.Injectable)({
  providedIn: 'root'
})], DialogServiceMock);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJjb3Zfa29ncmgycmx0IiwiYWN0dWFsQ292ZXJhZ2UiLCJzIiwiY29yZV8xIiwicmVxdWlyZSIsInJ4anNfMSIsIkRpYWxvZ1NlcnZpY2VNb2NrIiwiZXhwb3J0cyIsIm9wZW5TdWNjZXNzRGlhbG9nIiwibWVzc2FnZSIsImYiLCJjcmVhdGVNb2NrRGlhbG9nUmVmIiwib3BlbkZhaWx1cmVEaWFsb2ciLCJvcGVuRGVsZXRlRGlhbG9nIiwiYWZ0ZXJDbG9zZWQiLCJvZiIsInRzbGliXzEiLCJfX2RlY29yYXRlIiwiSW5qZWN0YWJsZSIsInByb3ZpZGVkSW4iXSwic291cmNlcyI6WyJDOlxcVXNlcnNcXEp1bGnDoW5cXERlc2t0b3BcXGZyb250XFxmcm9udGVuZC1hcHBcXHNyY1xcYXBwXFxtb2Nrc1xcZGlhbG9nLnNlcnZpY2UubW9jay50cyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBJbmplY3RhYmxlIH0gZnJvbSBcIkBhbmd1bGFyL2NvcmVcIjtcclxuaW1wb3J0IHsgTWF0RGlhbG9nLCBNYXREaWFsb2dSZWYgfSBmcm9tIFwiQGFuZ3VsYXIvbWF0ZXJpYWwvZGlhbG9nXCI7XHJcbmltcG9ydCB7IFN1Y2Nlc3NEaWFsb2dDb21wb25lbnQgfSBmcm9tIFwiLi4vY29tcG9uZW50cy9zdWNjZXNzLWRpYWxvZy9zdWNjZXNzLWRpYWxvZy5jb21wb25lbnRcIjtcclxuaW1wb3J0IHsgRXJyb3JBdmlzb0NvbXBvbmVudCB9IGZyb20gXCIuLi9jb21wb25lbnRzL2Vycm9yLWF2aXNvL2Vycm9yLWF2aXNvLmNvbXBvbmVudFwiO1xyXG5pbXBvcnQgeyBFbGltaW5hckRpYWxvZ0NvbXBvbmVudCB9IGZyb20gXCIuLi9jb21wb25lbnRzL2VsaW1pbmFyLWRpYWxvZy9lbGltaW5hci1kaWFsb2cuY29tcG9uZW50XCI7XHJcbmltcG9ydCB7IG9mIH0gZnJvbSBcInJ4anNcIjtcclxuXHJcbkBJbmplY3RhYmxlKHtcclxuICAgIHByb3ZpZGVkSW46ICdyb290J1xyXG4gIH0pXHJcbiAgZXhwb3J0IGNsYXNzIERpYWxvZ1NlcnZpY2VNb2NrIHtcclxuICAgIG9wZW5TdWNjZXNzRGlhbG9nKG1lc3NhZ2U6IHN0cmluZyk6IE1hdERpYWxvZ1JlZjxhbnksIGFueT4ge1xyXG4gICAgICByZXR1cm4gdGhpcy5jcmVhdGVNb2NrRGlhbG9nUmVmKCk7XHJcbiAgICB9XHJcbiAgXHJcbiAgICBvcGVuRmFpbHVyZURpYWxvZyhtZXNzYWdlOiBzdHJpbmcpOiBNYXREaWFsb2dSZWY8YW55LCBhbnk+IHtcclxuICAgICAgcmV0dXJuIHRoaXMuY3JlYXRlTW9ja0RpYWxvZ1JlZigpO1xyXG4gICAgfVxyXG4gIFxyXG4gICAgb3BlbkRlbGV0ZURpYWxvZyhtZXNzYWdlOiBzdHJpbmcpOiBNYXREaWFsb2dSZWY8YW55LCBhbnk+IHtcclxuICAgICAgcmV0dXJuIHRoaXMuY3JlYXRlTW9ja0RpYWxvZ1JlZigpO1xyXG4gICAgfVxyXG4gIFxyXG4gICAgcHJpdmF0ZSBjcmVhdGVNb2NrRGlhbG9nUmVmKCk6IE1hdERpYWxvZ1JlZjxhbnksIGFueT4ge1xyXG4gICAgICByZXR1cm4ge1xyXG4gICAgICAgIGFmdGVyQ2xvc2VkOiAoKSA9PiBvZih7fSksXHJcbiAgICAgIH0gYXMgTWF0RGlhbG9nUmVmPGFueSwgYW55PjtcclxuICAgIH1cclxuICB9Il0sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7SUFxQks7SUFBQUEsYUFBQSxZQUFBQSxDQUFBO01BQUEsT0FBQUMsY0FBQTtJQUFBO0VBQUE7RUFBQSxPQUFBQSxjQUFBO0FBQUE7QUFBQUQsYUFBQTtBQUFBQSxhQUFBLEdBQUFFLENBQUE7Ozs7Ozs7Ozs7QUFyQkwsTUFBQUMsTUFBQTtBQUFBO0FBQUEsQ0FBQUgsYUFBQSxHQUFBRSxDQUFBLE9BQUFFLE9BQUE7QUFLQSxNQUFBQyxNQUFBO0FBQUE7QUFBQSxDQUFBTCxhQUFBLEdBQUFFLENBQUEsT0FBQUUsT0FBQTtBQUtTLElBQU1FLGlCQUFpQjtBQUFBO0FBQUEsQ0FBQU4sYUFBQSxHQUFBRSxDQUFBLE9BQUFLLE9BQUEsQ0FBQUQsaUJBQUEsR0FBdkIsTUFBTUEsaUJBQWlCO0VBQzVCRSxpQkFBaUJBLENBQUNDLE9BQWU7SUFBQTtJQUFBVCxhQUFBLEdBQUFVLENBQUE7SUFBQVYsYUFBQSxHQUFBRSxDQUFBO0lBQy9CLE9BQU8sSUFBSSxDQUFDUyxtQkFBbUIsRUFBRTtFQUNuQztFQUVBQyxpQkFBaUJBLENBQUNILE9BQWU7SUFBQTtJQUFBVCxhQUFBLEdBQUFVLENBQUE7SUFBQVYsYUFBQSxHQUFBRSxDQUFBO0lBQy9CLE9BQU8sSUFBSSxDQUFDUyxtQkFBbUIsRUFBRTtFQUNuQztFQUVBRSxnQkFBZ0JBLENBQUNKLE9BQWU7SUFBQTtJQUFBVCxhQUFBLEdBQUFVLENBQUE7SUFBQVYsYUFBQSxHQUFBRSxDQUFBO0lBQzlCLE9BQU8sSUFBSSxDQUFDUyxtQkFBbUIsRUFBRTtFQUNuQztFQUVRQSxtQkFBbUJBLENBQUE7SUFBQTtJQUFBWCxhQUFBLEdBQUFVLENBQUE7SUFBQVYsYUFBQSxHQUFBRSxDQUFBO0lBQ3pCLE9BQU87TUFDTFksV0FBVyxFQUFFQSxDQUFBLEtBQU07UUFBQTtRQUFBZCxhQUFBLEdBQUFVLENBQUE7UUFBQVYsYUFBQSxHQUFBRSxDQUFBO1FBQUEsV0FBQUcsTUFBQSxDQUFBVSxFQUFFLEVBQUMsRUFBRSxDQUFDO01BQUQ7S0FDQztFQUM3QjtDQUNEO0FBQUE7QUFBQWYsYUFBQSxHQUFBRSxDQUFBOzRCQWxCWUksaUJBQWlCLEdBQUFVLE9BQUEsQ0FBQUMsVUFBQSxFQUgvQixJQUFBZCxNQUFBLENBQUFlLFVBQVUsRUFBQztFQUNSQyxVQUFVLEVBQUU7Q0FDYixDQUFDLEMsRUFDV2IsaUJBQWlCLENBa0I3QiJ9