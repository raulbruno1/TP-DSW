{"version":3,"names":["cov_kogrh2rlt","actualCoverage","s","core_1","require","index_js_1","success_dialog_component_js_1","error_aviso_component_js_1","eliminar_dialog_component_js_1","DialogServiceMock","exports","constructor","dialog","f","openSuccessDialog","message","open","SuccessDialogComponent","width","height","data","openFailureDialog","console","log","ErrorAvisoComponent","openDeleteDialog","EliminarDialogComponent","tslib_1","__decorate","Injectable","providedIn","MatDialog"],"sources":["C:\\Users\\Juli√°n\\Desktop\\front\\frontend-app\\src\\app\\mocks\\dialog.service.mock.ts"],"sourcesContent":["import { Injectable } from \"@angular/core\";\r\nimport { MatDialog, MatDialogRef } from \"@angular/material/dialog/index.js\";\r\nimport { SuccessDialogComponent } from \"../components/success-dialog/success-dialog.component.js\";\r\nimport { ErrorAvisoComponent } from \"../components/error-aviso/error-aviso.component.js\";\r\nimport { EliminarDialogComponent } from \"../components/eliminar-dialog/eliminar-dialog.component.js\";\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n  })\r\n  export class DialogServiceMock {\r\n    constructor(public dialog: MatDialog) {}\r\n  \r\n    openSuccessDialog(message: string): MatDialogRef<SuccessDialogComponent> {\r\n      return this.dialog.open(SuccessDialogComponent, {\r\n        width: '400px',\r\n        height: '150px',\r\n        data: { message }\r\n      });\r\n    }\r\n    openFailureDialog(message: string): MatDialogRef<ErrorAvisoComponent> {\r\n        console.log(message)\r\n          return this.dialog.open(ErrorAvisoComponent, {\r\n        width: '350px',\r\n        height: '130px',\r\n        data: { message }\r\n      });\r\n       }\r\n  \r\n  \r\n    openDeleteDialog(message: string): MatDialogRef<EliminarDialogComponent> {\r\n      return this.dialog.open(EliminarDialogComponent, {\r\n        width: '600px',\r\n        height: '150px',\r\n        data: { message }\r\n      });\r\n    }\r\n  }"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;IAcQ;IAAAA,aAAA,YAAAA,CAAA;MAAA,OAAAC,cAAA;IAAA;EAAA;EAAA,OAAAA,cAAA;AAAA;AAAAD,aAAA;AAAAA,aAAA,GAAAE,CAAA;;;;;;;;;;AAdR,MAAAC,MAAA;AAAA;AAAA,CAAAH,aAAA,GAAAE,CAAA,OAAAE,OAAA;AACA,MAAAC,UAAA;AAAA;AAAA,CAAAL,aAAA,GAAAE,CAAA,OAAAE,OAAA;AACA,MAAAE,6BAAA;AAAA;AAAA,CAAAN,aAAA,GAAAE,CAAA,OAAAE,OAAA;AACA,MAAAG,0BAAA;AAAA;AAAA,CAAAP,aAAA,GAAAE,CAAA,OAAAE,OAAA;AACA,MAAAI,8BAAA;AAAA;AAAA,CAAAR,aAAA,GAAAE,CAAA,OAAAE,OAAA;AAKS,IAAMK,iBAAiB;AAAA;AAAA,CAAAT,aAAA,GAAAE,CAAA,OAAAQ,OAAA,CAAAD,iBAAA,GAAvB,MAAMA,iBAAiB;EAC5BE,YAAmBC,MAAiB;IAAA;IAAAZ,aAAA,GAAAa,CAAA;IAAAb,aAAA,GAAAE,CAAA;IAAjB,KAAAU,MAAM,GAANA,MAAM;EAAc;EAEvCE,iBAAiBA,CAACC,OAAe;IAAA;IAAAf,aAAA,GAAAa,CAAA;IAAAb,aAAA,GAAAE,CAAA;IAC/B,OAAO,IAAI,CAACU,MAAM,CAACI,IAAI,CAACV,6BAAA,CAAAW,sBAAsB,EAAE;MAC9CC,KAAK,EAAE,OAAO;MACdC,MAAM,EAAE,OAAO;MACfC,IAAI,EAAE;QAAEL;MAAO;KAChB,CAAC;EACJ;EACAM,iBAAiBA,CAACN,OAAe;IAAA;IAAAf,aAAA,GAAAa,CAAA;IAAAb,aAAA,GAAAE,CAAA;IAC7BoB,OAAO,CAACC,GAAG,CAACR,OAAO,CAAC;IAAA;IAAAf,aAAA,GAAAE,CAAA;IAClB,OAAO,IAAI,CAACU,MAAM,CAACI,IAAI,CAACT,0BAAA,CAAAiB,mBAAmB,EAAE;MAC/CN,KAAK,EAAE,OAAO;MACdC,MAAM,EAAE,OAAO;MACfC,IAAI,EAAE;QAAEL;MAAO;KAChB,CAAC;EACD;EAGHU,gBAAgBA,CAACV,OAAe;IAAA;IAAAf,aAAA,GAAAa,CAAA;IAAAb,aAAA,GAAAE,CAAA;IAC9B,OAAO,IAAI,CAACU,MAAM,CAACI,IAAI,CAACR,8BAAA,CAAAkB,uBAAuB,EAAE;MAC/CR,KAAK,EAAE,OAAO;MACdC,MAAM,EAAE,OAAO;MACfC,IAAI,EAAE;QAAEL;MAAO;KAChB,CAAC;EACJ;;;;;;;;;;;;;;;;4BA1BWN,iBAAiB,GAAAkB,OAAA,CAAAC,UAAA,EAH/B,IAAAzB,MAAA,CAAA0B,UAAU,EAAC;EACRC,UAAU,EAAE;CACb,CAAC,E,yCAE2BzB,UAAA,CAAA0B,SAAS,G,EADzBtB,iBAAiB,CA2B7B"}