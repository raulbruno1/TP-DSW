{"file":"C:\\Users\\Julián\\Desktop\\front\\frontend-app\\src\\app\\components\\cursos\\cursos.component.spec.ts","mappings":"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","names":[],"sources":["C:\\Users\\Julián\\Desktop\\front\\frontend-app\\src\\app\\components\\cursos\\cursos.component.spec.ts"],"sourcesContent":["import { ComponentFixture, TestBed } from '@angular/core/testing';\r\nimport { CursosComponent } from './cursos.component';\r\nimport { CoursedataServiceMock } from 'src/app/mocks/materiadata.service.mock';\r\nimport { CoursedataService } from 'src/app/services/materiadata.service';\r\nimport { DialogServiceMock } from 'src/app/mocks/dialog.service.mock';\r\nimport { DialogService } from 'src/app/services/dialog.service';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Router } from '@angular/router';\r\nimport { of, switchMap, throwError } from 'rxjs';\r\nimport { MatDialogRef } from '@angular/material/dialog';\r\nimport { ErrorAvisoComponent } from '../error-aviso/error-aviso.component';\r\n\r\nconst httpMock = {get: jest.fn()};\r\nconst dialogMock= {open: jest.fn(),\r\n  openFailureDialog: jest.fn(),};\r\n\r\ndescribe('CursosComponent', () => {\r\n  let component: CursosComponent;\r\n  let fixture: ComponentFixture<CursosComponent>;\r\n\r\n  beforeEach(() => {\r\n    TestBed.configureTestingModule({\r\n      declarations: [CursosComponent],\r\n      providers: [{provide: CoursedataService, useClass: CoursedataServiceMock},\r\n                  {provide: DialogService, useClass: DialogServiceMock},\r\n                {provide: HttpClient, useValue: httpMock},\r\n                {provide: DialogService, useValue: dialogMock}]\r\n    }).compileComponents();\r\n    fixture = TestBed.createComponent(CursosComponent);\r\n    component = fixture.componentInstance;\r\n    fixture.detectChanges();\r\n  });\r\n\r\n  it('should handle error when getAllCourses fails', () => {\r\n    const courseService = TestBed.inject(CoursedataService);\r\n    const dialogService = TestBed.inject(DialogService);\r\n    const router = TestBed.inject(Router);\r\n\r\n    jest.spyOn(courseService, 'getAllCourses').mockImplementation(() => throwError(() => new ErrorEvent('Network error')));\r\n    const mockDialogRef = { afterClosed: () => of({}) } as MatDialogRef<ErrorAvisoComponent, any>;\r\n    jest.spyOn(dialogService, 'openFailureDialog').mockReturnValue(mockDialogRef);\r\n    jest.spyOn(router, 'navigate').mockImplementation(() => Promise.resolve(true));\r\n  \r\n    component.ngOnInit();\r\n  \r\n    expect(courseService.getAllCourses).toHaveBeenCalled();\r\n    expect(dialogService.openFailureDialog).toHaveBeenCalledWith('Error al cargar los datos, intente nuevamente');\r\n    expect(router.navigate).toHaveBeenCalledWith(['/cursos']);\r\n  });\r\n  \r\n\r\n  it('should create', () => {\r\n    expect(component).toBeTruthy();\r\n  });\r\n\r\n  it('should have \"all\" as the default selected category', () => {\r\n    expect(component.selected_category).toEqual('all');\r\n  });\r\n\r\n  it('should filter courses by category', () => {\r\n    const category = 'principiante';\r\n    component.original_courses = [\r\n      { id: '312313333',name: 'test',totalhours:45, email: 'email@prueba', desc: 'hola', icon: '/assets/cursos/motherboard.svg' , level: 'principiante' },\r\n      { id: '312313334',name: 'test2',totalhours:45, email: 'email2@prueba', desc: 'hola', icon: '/assets/cursos/motherboard.svg' , level: 'avanzado' },\r\n      { id: '312313335',name: 'test3',totalhours:45, email: 'email3@prueba', desc: 'hola', icon: '/assets/cursos/motherboard.svg' , level: 'principiante' }\r\n    ];\r\n    component.filterByCategory(category);\r\n    expect(component.courses).toEqual(component.original_courses.filter((course: { level: string; }) => course.level === category));\r\n  });\r\n\r\n  it('should show all courses when ShowAll is called', () => {\r\n    component.ShowAll();\r\n    expect(component.courses).toEqual(component.original_courses);\r\n  });\r\n\r\n  it('should reset selected category and courses when restart is called', () => {\r\n    component.restart();\r\n    expect(component.selected_category).toEqual('all');\r\n    expect(component.courses).toEqual(component.original_courses);\r\n  });\r\n});"],"version":3}